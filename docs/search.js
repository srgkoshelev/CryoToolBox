window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "CryoToolBox", "modulename": "CryoToolBox", "kind": "module", "doc": "<p><code>CryoToolBox</code> is a Python module for simple heat transfer and hydraulics\ncalculation using <a href=\"https://github.com/CoolProp/CoolProp\">CoolProp</a> and\n<a href=\"https://github.com/hgrecco/pint\">Pint</a> for unit handling.</p>\n\n<p>Provides:</p>\n\n<ol>\n<li>Thermal properties via open source HEOS or REFPROP back-end.</li>\n<li>Convenient calculation using a thermodynamic state <code>cp_wrapper.ThermState</code>.</li>\n<li>Seemless use of units for all calculations.</li>\n<li>Useful thermodynamic and hydraulic functions.</li>\n<li>Relief valve sizing functions.</li>\n<li>Oxygen deficiency analysis utilities.</li>\n</ol>\n\n<p>CryoToolBox provides utility functions for variety of engineering\ncalculations, including fluid dynamic, heat transfer, and oxygen\ndeficiency analyses. The setup is simple:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">CryoToolBox</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">ctb</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ureg</span>  <span class=\"c1\"># Unit registry that handles unit conversions</span>\n</code></pre>\n</div>\n\n<p>Easy to create and get dimensions of pipes and tubes. Inputs in\ndifferent units is supported:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">Q_</span><span class=\"p\">(</span><span class=\"s1\">&#39;2 inch&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># Nominal Diameter (here in inch)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SCH</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">m</span>  <span class=\"c1\"># Length (here in meter)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pipe_2in</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Pipe</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">SCH</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">)</span>   <span class=\"c1\"># Creating the pipepipe_2in = ctb.piping.Pipe(D, SCH, L)   # Creating the pipe</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe_2in</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">)</span>  <span class=\"c1\"># Pipe ID in inchprint(pipe_2in.ID)  # Pipe ID in inch</span>\n<span class=\"mf\">2.157</span> <span class=\"n\">inch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe_2in</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">))</span>  <span class=\"c1\"># Pipe ID in m</span>\n<span class=\"mf\">0.0547878</span> <span class=\"n\">meter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe_2in</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">)</span>  <span class=\"c1\"># Pipe Area</span>\n<span class=\"mf\">3.6541819795329746</span> <span class=\"n\">inch</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pipe_1in</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Pipe</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">SCH</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">)</span>  <span class=\"c1\"># Nominal diameter can be a number</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pipe_1in</span><span class=\"o\">.</span><span class=\"n\">OD</span><span class=\"p\">)</span>\n<span class=\"mf\">1.315</span> <span class=\"n\">inch</span>\n</code></pre>\n</div>\n\n<p>Tubes can have custom dimensions:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tube</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Tube</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mf\">0.035</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tube</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">)</span>  <span class=\"c1\"># Tube ID</span>\n<span class=\"mf\">1.93</span> <span class=\"n\">inch</span>\n</code></pre>\n</div>\n\n<p>Copper tubes are also supported:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c_tube</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">CopperTube</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"s1\">&#39;K&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c_tube</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">)</span>\n<span class=\"mf\">1.959</span> <span class=\"n\">inch</span>\n</code></pre>\n</div>\n\n<p>Under the hood CoolProp calculates fluid properties, no matter what\nunits are used to define the thermodynamic state:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fluid</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ThermState</span><span class=\"p\">(</span><span class=\"s1\">&#39;helium&#39;</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">K</span><span class=\"p\">,</span> <span class=\"n\">P</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">bar</span><span class=\"p\">)</span>  <span class=\"c1\"># Fluid state (here helium at T=300K and P=3 bars)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"o\">.</span><span class=\"n\">Dmass</span><span class=\"p\">)</span>  <span class=\"c1\"># Mass density</span>\n<span class=\"mf\">0.4807183970599733</span> <span class=\"n\">kilogram</span> <span class=\"o\">/</span> <span class=\"n\">meter</span> <span class=\"o\">**</span> <span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"o\">.</span><span class=\"n\">conductivity</span><span class=\"p\">)</span>  <span class=\"c1\"># Conductivity</span>\n<span class=\"mf\">0.1561263836300348</span> <span class=\"n\">watt</span> <span class=\"o\">/</span> <span class=\"n\">kelvin</span> <span class=\"o\">/</span> <span class=\"n\">meter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"o\">.</span><span class=\"n\">viscosity</span><span class=\"p\">)</span>  <span class=\"c1\"># Viscosity</span>\n<span class=\"mf\">1.993663632711359e-05</span> <span class=\"n\">pascal</span> <span class=\"o\">*</span> <span class=\"n\">second</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"o\">.</span><span class=\"n\">Prandtl</span><span class=\"p\">)</span>  <span class=\"c1\"># Prandtl</span>\n<span class=\"mf\">0.6631570139483488</span>\n</code></pre>\n</div>\n\n<p>Additionally, pressure drop calculations for other piping elements,\ne.g., elbows, tees, or valves, are supported:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Cv</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>   <span class=\"c1\"># Cv of the valve</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">valve</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Valve</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Cv</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">valve</span><span class=\"o\">.</span><span class=\"n\">K</span><span class=\"p\">())</span>\n<span class=\"mf\">142.46046037233918</span> <span class=\"n\">dimensionless</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dP</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">dP_adiab</span><span class=\"p\">(</span><span class=\"n\">m_dot</span><span class=\"p\">,</span> <span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">valve</span><span class=\"p\">)</span>  <span class=\"c1\"># Pressure drop for adiabatic compressible flow</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dP</span><span class=\"p\">)</span>\n<span class=\"mf\">1282.9654742232524</span> <span class=\"n\">pascal</span>\n</code></pre>\n</div>\n\n<p>The package also supports calculation of pressure drops for\nincompressible flow, isothermal or adiabatic flows. Here\\'s an example\nof calculation for helium running through 1\\\" NPS pipe (both defined\nabove):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m_dot</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">Q_</span><span class=\"p\">(</span><span class=\"s1\">&#39;10 g/s&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># Mass flow (here in g/s)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dP_isot</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">dP_isot</span><span class=\"p\">(</span><span class=\"n\">m_dot</span><span class=\"p\">,</span> <span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">pipe_1in</span><span class=\"p\">)</span>  <span class=\"c1\"># Pressure drop for isothermal compressible flow</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dP_isot</span><span class=\"p\">)</span>\n<span class=\"mf\">2896.1987828552374</span> <span class=\"n\">pascal</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dP_adiab</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">dP_adiab</span><span class=\"p\">(</span><span class=\"n\">m_dot</span><span class=\"p\">,</span> <span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">pipe_1in</span><span class=\"p\">)</span> <span class=\"c1\"># Pressure drop for adiabatic flow</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dP_adiab</span><span class=\"p\">)</span>\n<span class=\"mf\">2632.691405886493</span> <span class=\"n\">pascal</span>\n</code></pre>\n</div>\n\n<p>CryoToolBox can calculate some other useful quantities for manual like\nchecks, e.g., Reynolds number or Darcy friction factor:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Re</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">Re</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">m_dot</span><span class=\"p\">,</span> <span class=\"n\">pipe_1in</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">pipe_1in</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">)</span>  <span class=\"c1\"># Reynolds number</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Re</span><span class=\"p\">)</span>\n<span class=\"mf\">22920.172805808736</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">eps</span> <span class=\"o\">=</span> <span class=\"mf\">0.000015</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">m</span>  <span class=\"c1\"># Pipe rugosity (here stainless steel)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">eps_r</span> <span class=\"o\">=</span> <span class=\"n\">eps</span><span class=\"o\">/</span><span class=\"n\">pipe_1in</span><span class=\"o\">.</span><span class=\"n\">ID</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f_Darcy</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">f_Darcy</span><span class=\"p\">(</span><span class=\"n\">Re</span><span class=\"p\">,</span> <span class=\"n\">eps_r</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f_Darcy</span><span class=\"p\">)</span>\n<span class=\"mf\">0.026363992431440168</span>\n</code></pre>\n</div>\n\n<p>The inverse problem of maximum flow rate calculation is also handled:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">P_out</span> <span class=\"o\">=</span> <span class=\"mf\">2.999</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">bar</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m_dot</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">m_dot_isot</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">pipe_1in</span><span class=\"p\">,</span> <span class=\"n\">P_out</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m_dot</span><span class=\"p\">)</span>\n<span class=\"mf\">1.5228117452427699</span> <span class=\"n\">gram</span> <span class=\"o\">/</span> <span class=\"n\">second</span>\n</code></pre>\n</div>\n\n<p>The package also supports pressure relief sizing, for example API-520\nrecommended direct integration method.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">G_nozzle</span><span class=\"p\">(</span><span class=\"n\">fluid</span><span class=\"p\">,</span> <span class=\"n\">P_out</span><span class=\"p\">)</span>  <span class=\"c1\"># Maximum mass flux with direct integration method (kg/s\ua78fm2)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Maximum mass flux with direct integration method (here the orifce is the pipe area) with Kb=Kc=Kd=K=1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m_dot</span> <span class=\"o\">=</span> <span class=\"n\">G</span> <span class=\"o\">*</span> <span class=\"n\">pipe_1in</span><span class=\"o\">.</span><span class=\"n\">area</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m_dot</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">g</span><span class=\"o\">/</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"p\">))</span>\n<span class=\"mf\">5.978136976441524</span> <span class=\"n\">gram</span> <span class=\"o\">/</span> <span class=\"n\">second</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A_orifice</span> <span class=\"o\">=</span> <span class=\"n\">m_dot</span><span class=\"o\">/</span><span class=\"n\">G</span>   <span class=\"c1\"># Orifice size with Kb=Kc=Kd=Kv=1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">A_orifice</span><span class=\"p\">)</span>\n<span class=\"mf\">0.9451552184159598</span> <span class=\"n\">inch</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n</code></pre>\n</div>\n"}, {"fullname": "CryoToolBox.logger", "modulename": "CryoToolBox", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger CryoToolBox (DEBUG)&gt;"}, {"fullname": "CryoToolBox.FESHM4240_TABLES", "modulename": "CryoToolBox.FESHM4240_TABLES", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.FESHM4240_TABLES.TABLE_1", "modulename": "CryoToolBox.FESHM4240_TABLES", "qualname": "TABLE_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Compressor&#x27;: {&#x27;Leak&#x27;: &lt;Quantity(5e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Component rupture&#x27;: &lt;Quantity(3e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Dewar&#x27;: {&#x27;Loss of vacuum&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;Electrical Power Failure&#x27;: {&#x27;Time rate&#x27;: &lt;Quantity(0.0001, &#x27;1 / hour&#x27;)&gt;, &#x27;Demand rate&#x27;: &lt;Quantity(0.0003, &#x27;dimensionless&#x27;)&gt;}, &#x27;Fluid line&#x27;: {&#x27;Leak&#x27;: &lt;Quantity(5e-07, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(2e-08, &#x27;1 / hour&#x27;)&gt;}, &#x27;Cryogenic magnet powered&#x27;: {&#x27;Rupture&#x27;: &lt;Quantity(2e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Cryogenic magnet not powered&#x27;: {&#x27;Rupture&#x27;: &lt;Quantity(2e-08, &#x27;1 / hour&#x27;)&gt;}, &#x27;Header piping assembly&#x27;: {&#x27;Rupture&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;}, &#x27;U-Tube change&#x27;: {&#x27;Small event&#x27;: &lt;Quantity(0.03, &#x27;dimensionless&#x27;)&gt;, &#x27;Large event&#x27;: &lt;Quantity(0.001, &#x27;dimensionless&#x27;)&gt;}}"}, {"fullname": "CryoToolBox.FESHM4240_TABLES.TABLE_2", "modulename": "CryoToolBox.FESHM4240_TABLES", "qualname": "TABLE_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Battery&#x27;: {&#x27;No output&#x27;: &lt;Quantity(3e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;Circuit Breaker&#x27;: {&#x27;Failure to operate&#x27;: &lt;Quantity(0.001, &#x27;dimensionless&#x27;)&gt;, &#x27;Premature transfer&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;Diesel&#x27;: {&#x27;Failure to start&#x27;: &lt;Quantity(0.03, &#x27;dimensionless&#x27;)&gt;, &#x27;Failure to run (Emergency)&#x27;: &lt;Quantity(0.003, &#x27;1 / hour&#x27;)&gt;, &#x27;Failure to run (Engine only)&#x27;: &lt;Quantity(0.0003, &#x27;1 / hour&#x27;)&gt;}, &#x27;Fan&#x27;: {&#x27;Failure to run&#x27;: &lt;Quantity(9e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;Fuse&#x27;: {&#x27;Premature open&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Failure to open&#x27;: &lt;Quantity(1e-05, &#x27;dimensionless&#x27;)&gt;}, &#x27;Flange, reinforced gasket&#x27;: {&#x27;Leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(4e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Rupture&#x27;: &lt;Quantity(1e-09, &#x27;1 / hour&#x27;)&gt;}, &#x27;Flange, soft gasket&#x27;: {&#x27;Leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(4e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Blowout&#x27;: &lt;Quantity(3e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(1e-09, &#x27;1 / hour&#x27;)&gt;}, &#x27;Instrumentation&#x27;: {&#x27;Failure to operate&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Shift&#x27;: &lt;Quantity(3e-05, &#x27;1 / hour&#x27;)&gt;}, &#x27;Louver&#x27;: {&#x27;Failure rate&#x27;: &lt;Quantity(3e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Piping&#x27;: {&#x27;Small leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(1e-09, &#x27;1 / meter / hour&#x27;)&gt;}, &#x27;Large leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(1000, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(1e-10, &#x27;1 / meter / hour&#x27;)&gt;}, &#x27;Rupture&#x27;: &lt;Quantity(3e-11, &#x27;1 / meter / hour&#x27;)&gt;}, &#x27;Pipe weld&#x27;: {&#x27;Small leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(2e-11, &#x27;1 / hour&#x27;)&gt;}, &#x27;Large leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(1000, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(2e-12, &#x27;1 / hour&#x27;)&gt;}, &#x27;Rupture&#x27;: &lt;Quantity(6e-13, &#x27;1 / hour&#x27;)&gt;}, &#x27;Pump&#x27;: {&#x27;Failure to start&#x27;: &lt;Quantity(0.001, &#x27;dimensionless&#x27;)&gt;, &#x27;Failure to run, normal&#x27;: &lt;Quantity(3e-05, &#x27;1 / hour&#x27;)&gt;, &#x27;Failure to run, extreme&#x27;: &lt;Quantity(0.001, &#x27;1 / hour&#x27;)&gt;}, &#x27;Relay&#x27;: {&#x27;Failure to energize&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;Failure to close&#x27;: &lt;Quantity(3e-07, &#x27;1 / hour&#x27;)&gt;, &#x27;Short&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Open contact&#x27;: &lt;Quantity(1e-07, &#x27;1 / hour&#x27;)&gt;}, &#x27;Solid State Device&#x27;: {&#x27;HI PWR&#x27;: {&#x27;Failure rate&#x27;: &lt;Quantity(3e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Short&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;LOW PWR&#x27;: {&#x27;Failure rate&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Short&#x27;: &lt;Quantity(1e-07, &#x27;1 / hour&#x27;)&gt;}}, &#x27;Switch&#x27;: {&#x27;Limit&#x27;: &lt;Quantity(0.0003, &#x27;dimensionless&#x27;)&gt;, &#x27;Torque&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;Pressure&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;Manual&#x27;: &lt;Quantity(1e-05, &#x27;dimensionless&#x27;)&gt;, &#x27;Short&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;}, &#x27;Transformer&#x27;: {&#x27;Open&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Short&#x27;: &lt;Quantity(1e-06, &#x27;1 / hour&#x27;)&gt;}, &#x27;Valve, motorized&#x27;: {&#x27;Failure to operate&#x27;: &lt;Quantity(0.001, &#x27;dimensionless&#x27;)&gt;, &#x27;Failure to remain open&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;External leak&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(5e-10, &#x27;1 / hour&#x27;)&gt;}, &#x27;Valve, solenoid&#x27;: {&#x27;Failure to operate&#x27;: &lt;Quantity(0.001, &#x27;dimensionless&#x27;)&gt;}, &#x27;Valve, pneumatic&#x27;: {&#x27;Failure to operate&#x27;: &lt;Quantity(0.0003, &#x27;dimensionless&#x27;)&gt;, &#x27;Failure to remain open&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;External leak&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(5e-10, &#x27;1 / hour&#x27;)&gt;}, &#x27;Valve, check&#x27;: {&#x27;Failure to open&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;Reverse leak&#x27;: &lt;Quantity(3e-07, &#x27;1 / hour&#x27;)&gt;, &#x27;External leak&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(5e-10, &#x27;1 / hour&#x27;)&gt;}, &#x27;Orifice&#x27;: {&#x27;Rupture&#x27;: &lt;Quantity(1e-08, &#x27;dimensionless&#x27;)&gt;}, &#x27;Valve, manual&#x27;: {&#x27;Failure to open&#x27;: &lt;Quantity(0.0001, &#x27;dimensionless&#x27;)&gt;, &#x27;External leak&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;, &#x27;Rupture&#x27;: &lt;Quantity(5e-10, &#x27;1 / hour&#x27;)&gt;}, &#x27;Valve, relief&#x27;: {&#x27;Failure to open&#x27;: &lt;Quantity(1e-05, &#x27;dimensionless&#x27;)&gt;, &#x27;Premature open&#x27;: &lt;Quantity(1e-05, &#x27;1 / hour&#x27;)&gt;}, &#x27;Vessel, pressure&#x27;: {&#x27;Small leak&#x27;: {&#x27;Area&#x27;: &lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;, &#x27;Failure rate&#x27;: &lt;Quantity(8e-08, &#x27;1 / hour&#x27;)&gt;}, &#x27;Failure&#x27;: &lt;Quantity(5e-09, &#x27;1 / hour&#x27;)&gt;}, &#x27;Wire&#x27;: {&#x27;Open&#x27;: &lt;Quantity(3e-06, &#x27;1 / hour&#x27;)&gt;, &#x27;Short to GND&#x27;: &lt;Quantity(3e-07, &#x27;1 / hour&#x27;)&gt;, &#x27;Short to PWR&#x27;: &lt;Quantity(1e-08, &#x27;1 / hour&#x27;)&gt;}}"}, {"fullname": "CryoToolBox.cga", "modulename": "CryoToolBox.cga", "kind": "module", "doc": "<p>Pressure relief calculations for CGA S-1.3.\n2008 ed.</p>\n"}, {"fullname": "CryoToolBox.cga.P_FR", "modulename": "CryoToolBox.cga", "qualname": "P_FR", "kind": "function", "doc": "<p>Calculate flow rating pressure as per CGA S-1.3 2008 5.1.13.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>P_set : Set pressure\nfactor : pressure increase factor as per BPVC VIII Div. 1, UG-125\n    Common factors: 1.1, 1.21 (fire)</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>P_FR : flow rating pressure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">P_set</span>, </span><span class=\"param\"><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.theta", "modulename": "CryoToolBox.cga", "qualname": "theta", "kind": "function", "doc": "<p>\"\"Calculate temperature for flow capacity calculation per\nCGA S-1.3 2008 6.1.3.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fluid</strong> (ThermState):\nObject describing thermodynamic state (fluid, T, P).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {temperature</strong> (1}):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.calculate_fluid_FR", "modulename": "CryoToolBox.cga", "qualname": "calculate_fluid_FR", "kind": "function", "doc": "<p>Calculate flow rating temperature and pressure.\nReferences: CGA S-1.3 2008 5.1.13 and 6.1.3.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>fluid : ThermState\n    Fluid at design temperature and pressure.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>ThermState\n    Fluid at flow rating pressure and temperature for flow capacity calculation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.F", "modulename": "CryoToolBox.cga", "qualname": "F", "kind": "function", "doc": "<p>Calculate Correction factor F per 6.1.4.</p>\n\n<p>fluid_FR: fluid at flow rating temperature and pressure.\nfluid_i: fluid at the inlet of the PRD.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span>, </span><span class=\"param\"><span class=\"n\">fluid_i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.primary_insulated", "modulename": "CryoToolBox.cga", "qualname": "primary_insulated", "kind": "function", "doc": "<p>Calculate minimum required flow capacity for primary PRD on insulated\ncontainers for liquefied compressed gases, refrigerated fluids, and\nrefrigerated (cryogenic) fluids per 6.2.2.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Quantity {length:3, time:-1}\n    Required relief flow capacity for free air.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span>, </span><span class=\"param\"><span class=\"n\">U</span>, </span><span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">F</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">conservative</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.relief_fire_liquefied", "modulename": "CryoToolBox.cga", "qualname": "relief_fire_liquefied", "kind": "function", "doc": "<p>Calculate required relief capacity for liquefied compressed gases,\nrefrigerated fluids, and refrigerated (cryogenic) fluids in uninsulated and\ninsulated containers.\nCGA S-1.3 2008 6.3.2.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Quantity {length:3, time:-1}\n    Required relief flow capacity for free air.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span>, </span><span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">F</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.G_i", "modulename": "CryoToolBox.cga", "qualname": "G_i", "kind": "function", "doc": "<p>Calculate gas factor for insulated containers per\nNotes to Table 1 and Table 2.</p>\n\n<p>fluid_FR: fluid at flow rating temperature and pressure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span>, </span><span class=\"param\"><span class=\"n\">conservative</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.G_u", "modulename": "CryoToolBox.cga", "qualname": "G_u", "kind": "function", "doc": "<p>Calculate gas factor for insulated containers per\nNotes to Table 1 and Table 2.</p>\n\n<p>fluid_FR: fluid at flow rating temperature and pressure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cga.calculate_inlet_temp", "modulename": "CryoToolBox.cga", "qualname": "calculate_inlet_temp", "kind": "function", "doc": "<p>Calculate temperature at the relief inlet per 6.1.4 b).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid_FR</span>, </span><span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">pipe</span>, </span><span class=\"param\"><span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s1\">&#39;fire&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.constants", "modulename": "CryoToolBox.constants", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.constants.AIR", "modulename": "CryoToolBox.constants", "qualname": "AIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CryoToolBox.cp_wrapper.ThermState object&gt;"}, {"fullname": "CryoToolBox.cp_wrapper", "modulename": "CryoToolBox.cp_wrapper", "kind": "module", "doc": "<p>Wrapper module for CoolProp's AbstractState.</p>\n\n<ol>\n<li>Provides unit support</li>\n<li>Adds some small useful functions</li>\n</ol>\n"}, {"fullname": "CryoToolBox.cp_wrapper.CP_const_unit", "modulename": "CryoToolBox.cp_wrapper", "qualname": "CP_const_unit", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;gas_constant&#x27;: (1, &lt;Unit(&#x27;joule / mole / kelvin&#x27;)&gt;), &#x27;molar_mass&#x27;: (2, &lt;Unit(&#x27;kilogram / mole&#x27;)&gt;), &#x27;Dmolar_critical&#x27;: (5, &lt;Unit(&#x27;mole / meter ** 3&#x27;)&gt;), &#x27;T_reducing&#x27;: (6, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;T_critical&#x27;: (7, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;Dmass_critical&#x27;: (9, &lt;Unit(&#x27;kilogram / meter ** 3&#x27;)&gt;), &#x27;P_critical&#x27;: (10, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;P_reducing&#x27;: (11, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;T_triple&#x27;: (12, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;P_triple&#x27;: (13, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;T_sat&#x27;: (None, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;P_sat&#x27;: (None, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;T_min&#x27;: (14, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;T_max&#x27;: (15, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;P_max&#x27;: (16, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;P_min&#x27;: (17, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;T&#x27;: (19, &lt;Unit(&#x27;kelvin&#x27;)&gt;), &#x27;P&#x27;: (20, &lt;Unit(&#x27;pascal&#x27;)&gt;), &#x27;Q&#x27;: (21, &lt;Unit(&#x27;dimensionless&#x27;)&gt;), &#x27;Dmolar&#x27;: (24, &lt;Unit(&#x27;mole / meter ** 3&#x27;)&gt;), &#x27;Hmolar&#x27;: (25, &lt;Unit(&#x27;joule / mole&#x27;)&gt;), &#x27;Smolar&#x27;: (26, &lt;Unit(&#x27;joule / mole / kelvin&#x27;)&gt;), &#x27;Cpmolar&#x27;: (27, &lt;Unit(&#x27;joule / mole / kelvin&#x27;)&gt;), &#x27;Cvmolar&#x27;: (29, &lt;Unit(&#x27;joule / mole / kelvin&#x27;)&gt;), &#x27;Umolar&#x27;: (30, &lt;Unit(&#x27;joule / mole&#x27;)&gt;), &#x27;Dmass&#x27;: (36, &lt;Unit(&#x27;kilogram / meter ** 3&#x27;)&gt;), &#x27;Hmass&#x27;: (37, &lt;Unit(&#x27;joule / kilogram&#x27;)&gt;), &#x27;Smass&#x27;: (38, &lt;Unit(&#x27;joule / kilogram / kelvin&#x27;)&gt;), &#x27;Cpmass&#x27;: (39, &lt;Unit(&#x27;joule / kilogram / kelvin&#x27;)&gt;), &#x27;Cvmass&#x27;: (41, &lt;Unit(&#x27;joule / kilogram / kelvin&#x27;)&gt;), &#x27;Umass&#x27;: (42, &lt;Unit(&#x27;joule / kilogram&#x27;)&gt;), &#x27;viscosity&#x27;: (45, &lt;Unit(&#x27;pascal * second&#x27;)&gt;), &#x27;conductivity&#x27;: (46, &lt;Unit(&#x27;watt / meter / kelvin&#x27;)&gt;), &#x27;surface_tension&#x27;: (47, &lt;Unit(&#x27;newton / meter&#x27;)&gt;), &#x27;Prandtl&#x27;: (48, None), &#x27;speed_sound&#x27;: (49, &lt;Unit(&#x27;meter / second&#x27;)&gt;), &#x27;isothermal_compressibility&#x27;: (50, &lt;Unit(&#x27;1 / pascal&#x27;)&gt;), &#x27;isobaric_expansion_coefficient&#x27;: (51, &lt;Unit(&#x27;1 / kelvin&#x27;)&gt;), &#x27;isentropic_expansion_coefficient&#x27;: (52, &lt;Unit(&#x27;dimensionless&#x27;)&gt;), &#x27;Z&#x27;: (66, &lt;Unit(&#x27;dimensionless&#x27;)&gt;), &#x27;Phase&#x27;: (78, &lt;Unit(&#x27;dimensionless&#x27;)&gt;), &#x27;C_us&#x27;: (None, &lt;Unit(&#x27;pound * degree_Rankine ** 0.5 / hour / force_pound&#x27;)&gt;), &#x27;C_m&#x27;: (None, &lt;Unit(&#x27;second ** 2 * kelvin ** 0.5 / hour / meter&#x27;)&gt;)}"}, {"fullname": "CryoToolBox.cp_wrapper.CP_inputs", "modulename": "CryoToolBox.cp_wrapper", "qualname": "CP_inputs", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;QT&#x27;: 1, &#x27;PQ&#x27;: 2, &#x27;QSmolar&#x27;: 3, &#x27;QSmass&#x27;: 4, &#x27;HmolarQ&#x27;: 5, &#x27;HmassQ&#x27;: 6, &#x27;DmolarQ&#x27;: 7, &#x27;DmassQ&#x27;: 8, &#x27;PT&#x27;: 9, &#x27;DmassT&#x27;: 10, &#x27;DmolarT&#x27;: 11, &#x27;HmolarT&#x27;: 12, &#x27;HmassT&#x27;: 13, &#x27;SmolarT&#x27;: 14, &#x27;SmassT&#x27;: 15, &#x27;TUmolar&#x27;: 16, &#x27;TUmass&#x27;: 17, &#x27;DmassP&#x27;: 18, &#x27;DmolarP&#x27;: 19, &#x27;HmassP&#x27;: 20, &#x27;HmolarP&#x27;: 21, &#x27;PSmass&#x27;: 22, &#x27;PSmolar&#x27;: 23, &#x27;PUmass&#x27;: 24, &#x27;PUmolar&#x27;: 25, &#x27;HmassSmass&#x27;: 26, &#x27;HmolarSmolar&#x27;: 27, &#x27;SmassUmass&#x27;: 28, &#x27;SmolarUmolar&#x27;: 29, &#x27;DmassHmass&#x27;: 30, &#x27;DmolarHmolar&#x27;: 31, &#x27;DmassSmass&#x27;: 32, &#x27;DmolarSmolar&#x27;: 33, &#x27;DmassUmass&#x27;: 34, &#x27;DmolarUmolar&#x27;: 35}"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.__init__", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.__init__", "kind": "function", "doc": "<p>Available backends: HEOS (opensource), REFPROP.\nSee <a href=\"http://www.coolprop.org/coolprop/REFPROP.html\">http://www.coolprop.org/coolprop/REFPROP.html</a> for details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"s1\">&#39;HEOS&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">state_parameters</span></span>)</span>"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.update_kw", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.update_kw", "kind": "function", "doc": "<p>Update thermodynamic state using keyword arguments.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">state_parameters</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.update", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name1</span>, </span><span class=\"param\"><span class=\"n\">value1</span>, </span><span class=\"param\"><span class=\"n\">name2</span>, </span><span class=\"param\"><span class=\"n\">value2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.prepare_input", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.prepare_input", "kind": "function", "doc": "<p>Prepare value to input to CoolProp.</p>\n\n<p>Converts the value to units expected by CoolProp\n(see <code>CP_const_unit</code>).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nParameter name.</li>\n<li><strong>value</strong> (ureg.Quantity):\nParameter value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_critical", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_critical", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P_critical", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P_critical", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Dmolar_critical", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Dmolar_critical", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Dmass_critical", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Dmass_critical", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Dmolar", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Dmolar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Dmass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Dmass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Q", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Q", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.molar_mass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.molar_mass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.gas_constant", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.gas_constant", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.specific_gas_constant", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.specific_gas_constant", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.compressibility_factor", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.compressibility_factor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Z", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Z", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Hmolar", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Hmolar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Hmass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Hmass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Smolar", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Smolar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Smass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Smass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Cpmolar", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Cpmolar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Cpmass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Cpmass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Cvmolar", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Cvmolar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Cvmass", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Cvmass", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.viscosity", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.viscosity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.conductivity", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.conductivity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.surface_tension", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.surface_tension", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P_reducing", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P_reducing", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P_triple", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P_triple", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P_max", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P_max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_reducing", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_reducing", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_triple", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_triple", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_max", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_min", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_min", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.isothermal_compressibility", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.isothermal_compressibility", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.isobaric_expansion_coefficient", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.isobaric_expansion_coefficient", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.isentropic_expansion_coefficient", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.isentropic_expansion_coefficient", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.Prandtl", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.Prandtl", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.speed_sound", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.speed_sound", "kind": "variable", "doc": "<p>Mass fractions of a mixture.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.first_partial_deriv", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.first_partial_deriv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Of</span>, </span><span class=\"param\"><span class=\"n\">Wrt</span>, </span><span class=\"param\"><span class=\"n\">Constant</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.phase", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.phase", "kind": "variable", "doc": "<p>Calculate the phase of the fluid.</p>\n\n<ul>\n<li>0: Subcritical liquid</li>\n<li>1: Supercritical (p &gt; pc, T &gt; Tc)</li>\n<li>2: Supercritical gas (p &lt; pc, T &gt; Tc)</li>\n<li>3: Supercritical liquid (p &gt; pc, T &lt; Tc)</li>\n<li>4: At the critical point.</li>\n<li>5: Subcritical gas.</li>\n<li>6: Twophase.</li>\n<li>7: Unknown phase</li>\n</ul>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.set_mole_fractions", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.set_mole_fractions", "kind": "function", "doc": "<p>Set mole fractions for a mixture.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">fractions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.set_mass_fractions", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.set_mass_fractions", "kind": "function", "doc": "<p>Set mass fractions for a mixture.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">fractions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.set_volu_fractions", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.set_volu_fractions", "kind": "function", "doc": "<p>Set volume fractions for a mixture.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">fractions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.mole_fractions", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.mole_fractions", "kind": "variable", "doc": "<p>Mole fractions of a mixture.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.mass_fractions", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.mass_fractions", "kind": "variable", "doc": "<p>Mass fractions of a mixture.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.is_super_critical", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.is_super_critical", "kind": "variable", "doc": "<p>Return True if state is supercritical.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.specific_heat_input", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.specific_heat_input", "kind": "variable", "doc": "<p>Calculate Specific heat input, v * (dh/dv)|p.\nThis function is not described in AbstractState class.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.gamma", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.gamma", "kind": "variable", "doc": "<p>Calculate gamma = k = Cp/Cv coefficient.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.C_gas_const", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.C_gas_const", "kind": "variable", "doc": "<p>Constant for gas or vapor which is the function of the ratio of\nspecific heats k = Cp/Cv. ASME VIII.1-2015 pp. 423-424.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.C", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.C", "kind": "variable", "doc": "<p>A shortcut to C_gas_const</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.C_us", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.C_us", "kind": "variable", "doc": "<p>A shortcut to C_gas_const for US customary units</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.C_si", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.C_si", "kind": "variable", "doc": "<p>A shortcut to C_gas_const for SI units</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.name", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.name", "kind": "variable", "doc": "<p>Return fluid name (backend dependent)</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.backend", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.backend", "kind": "variable", "doc": "<p>Return backend name</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.M", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.M", "kind": "variable", "doc": "<p>Calculate relative molecular mass.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.MZT", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.MZT", "kind": "variable", "doc": "<p>Calculate sqrt(M/(ZT)) a commonly used square root group for discharge\nflow calculation.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.latent_heat", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.latent_heat", "kind": "variable", "doc": "<p>Calculate latent heat of evaporation for current quality.</p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.copy", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.copy", "kind": "function", "doc": "<p>Create a copy of current ThermState object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.to_standard", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.to_standard", "kind": "function", "doc": "<p>Create a copy of current ThermState object at standard conditions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">conditions</span><span class=\"o\">=</span><span class=\"s1\">&#39;NTP&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.P_sat", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.P_sat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.cp_wrapper.ThermState.T_sat", "modulename": "CryoToolBox.cp_wrapper", "qualname": "ThermState.T_sat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.functions", "modulename": "CryoToolBox.functions", "kind": "module", "doc": "<p>Helpful thermodynamic functions.</p>\n"}, {"fullname": "CryoToolBox.functions.E_TNT", "modulename": "CryoToolBox.functions", "qualname": "E_TNT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(4850.0, &#x27;joule / gram&#x27;)&gt;"}, {"fullname": "CryoToolBox.functions.z_1", "modulename": "CryoToolBox.functions", "qualname": "z_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(200, &#x27;foot&#x27;)&gt;"}, {"fullname": "CryoToolBox.functions.z_2", "modulename": "CryoToolBox.functions", "qualname": "z_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(15, &#x27;foot&#x27;)&gt;"}, {"fullname": "CryoToolBox.functions.z_3", "modulename": "CryoToolBox.functions", "qualname": "z_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(6.7, &#x27;foot&#x27;)&gt;"}, {"fullname": "CryoToolBox.functions.sigma", "modulename": "CryoToolBox.functions", "qualname": "sigma", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Unit(&#x27;stefan_boltzmann_constant&#x27;)&gt;"}, {"fullname": "CryoToolBox.functions.NISTError", "modulename": "CryoToolBox.functions", "qualname": "NISTError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.functions.NISTError.__init__", "modulename": "CryoToolBox.functions", "qualname": "NISTError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "CryoToolBox.functions.NISTError.message", "modulename": "CryoToolBox.functions", "qualname": "NISTError.message", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.functions.to_scfma", "modulename": "CryoToolBox.functions", "qualname": "to_scfma", "kind": "function", "doc": "<p>Convert mass flow rate into equivalent flow of air.\nFlow through a relief device with invariant Area/discharge coefficient\n(KA).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>M_dot_fluid : Quantity {mass: 1, time</strong> (-1}):\nmass flow rate</li>\n<li><strong>fluid</strong> (ThermState):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ThermState</strong>: volumetric air flow rate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">M_dot_fluid</span>, </span><span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.from_scfma", "modulename": "CryoToolBox.functions", "qualname": "from_scfma", "kind": "function", "doc": "<p>Convert volumetric air flow rate into equivalent mass flow of specified\nfluid. Flow through a relief device with invariant Area/discharge\ncoefficient (KA).\nInvert function to to_scfma().</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Q_air : Quantity {length: 3, time</strong> (-1}):\nvolumetric air flow rate</li>\n<li><strong>fluid</strong> (ThermState):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {mass: 1, time</strong> (-1}):\nmass flow rate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Q_air</span>, </span><span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.to_standard_flow", "modulename": "CryoToolBox.functions", "qualname": "to_standard_flow", "kind": "function", "doc": "<p>Converting volumetric flow at certain conditions or mass flow to\nflow at NTP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">flow_rate</span>, </span><span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.to_mass_flow", "modulename": "CryoToolBox.functions", "qualname": "to_mass_flow", "kind": "function", "doc": "<p>Calculate mass flow for given volumetric flow at standard conditions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Q_std</span>, </span><span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.m_max", "modulename": "CryoToolBox.functions", "qualname": "m_max", "kind": "function", "doc": "<p>Calculate max isentropic flow at sonic condition\n(9.46a, Fluid Mechanics, F. White, 2015)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">A</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.PRV_flow", "modulename": "CryoToolBox.functions", "qualname": "PRV_flow", "kind": "function", "doc": "<p>Calculate mass flow through the relief valve based on\nBPVC VIII div. 1 UG-131 (e) (2).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">Kd</span>, </span><span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.A_relief_API", "modulename": "CryoToolBox.functions", "qualname": "A_relief_API", "kind": "function", "doc": "<p>Calculate required relief area for given flow as per\nAPI 520 5.6.3/4</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>m_dot : Quantity {mass:1, time</strong> (-1}):\nmass flow rate</li>\n<li><p><strong>fluid</strong> (ThermState at relief conditions):</p></li>\n<li><p><strong>P_back : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nbackpressure</p></li>\n<li><strong>K_d</strong> (discharge coefficient):\n0.975 - when PRV installed with/without a rupture disk\n0.62 - for rupture disc only (see 5.11.1.1.2)</li>\n<li><strong>K_c</strong> (capacity correction factor due to backpressure):\napplies to balanced bellows valves only</li>\n<li><strong>K_c</strong> (combination correction factor):\n1 - for no rupture disc installed in combination\n0.9 - for rupture disc installed in combination</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">m_dot</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">P_back</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">K_d</span><span class=\"o\">=</span><span class=\"mf\">0.975</span>,</span><span class=\"param\">\t<span class=\"n\">K_b</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">K_c</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Cv_to_Kv", "modulename": "CryoToolBox.functions", "qualname": "Cv_to_Kv", "kind": "function", "doc": "<p>Convert flow coefficient from US units (Cv) to metric units (Kv).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Cv : flow coefficient (dimensionless, implied units</strong> (gal/(min*psi^0.5))):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>flow coefficient (dimensionless, implied units</strong> (m^3/(h*bar^0.5))):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Cv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Kv_to_Cv", "modulename": "CryoToolBox.functions", "qualname": "Kv_to_Cv", "kind": "function", "doc": "<p>Convert flow coefficient from metric units (Kv) to US units (Cv).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Kv : flow coefficient (dimensionless, implied units</strong> (m^3/(h*bar^0.5))):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>flow coefficient (dimensionless, implied units</strong> (gal/(min*psi^0.5))):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Kv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.theta_heat", "modulename": "CryoToolBox.functions", "qualname": "theta_heat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.rad_hl", "modulename": "CryoToolBox.functions", "qualname": "rad_hl", "kind": "function", "doc": "<p>Calculate radiative heat load including reduction due to baffles.\nBased on Kaganer \"Thermal insulation in cryogenic engineering\", p. 42.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>eps_1</strong> (float):\nemissivity of the first surface</li>\n<li><strong>eps_2</strong> (float):\nemissivity of the second surface</li>\n<li><strong>T_1 : Quantity {temperature</strong> (1}):\ntemperature of the first surface</li>\n<li><strong>T_2 : Quantity {temperature</strong> (1}):\ntemperature of the second surface</li>\n<li><strong>F1_2</strong> (float):\nF1_2 = F_cold/F_hot</li>\n<li><strong>baffles</strong> (dict):\nN - number of baffles\neps - emissivity of the baffle, assumed to be same on both sides</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: :q0: heat load without any baffles\nq_baffle : heat load with the baffles\neta : effectiveness of the baffles</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">T_1</span>, </span><span class=\"param\"><span class=\"n\">eps_1</span>, </span><span class=\"param\"><span class=\"n\">T_2</span>, </span><span class=\"param\"><span class=\"n\">eps_2</span>, </span><span class=\"param\"><span class=\"n\">F1_2</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">baffles</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;eps&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.02</span><span class=\"p\">}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.conduction_1D", "modulename": "CryoToolBox.functions", "qualname": "conduction_1D", "kind": "function", "doc": "<p>Calculate 1-dimensional heat flow rate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>A_cross : Quantity {length</strong> (2}):\ncross-sectional area</li>\n<li><strong>L : Quantity {length</strong> (1}):\nlength</li>\n<li><strong>k : Quantity {length: 1, mass: 1, temperature: -1, time</strong> (-3}):\nmaterial thermal conductivity</li>\n<li><strong>dT : Quantity {temperature</strong> (1}):\ntemperature difference</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {length: 2, mass: 1, time</strong> (-3}):\nheat flow rate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A_cross</span>, </span><span class=\"param\"><span class=\"n\">L</span>, </span><span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">dT</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.conduction_cyl", "modulename": "CryoToolBox.functions", "qualname": "conduction_cyl", "kind": "function", "doc": "<p>Calculate heat flow through cylindrical wall</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D_i : Quantity {length</strong> (2}):\ninner diameter</li>\n<li><strong>D_o : Quantity {length</strong> (2}):\nouter diameter</li>\n<li><strong>L : Quantity {length</strong> (1}):\nlength</li>\n<li><strong>k : Quantity {length: 1, mass: 1, temperature: -1, time</strong> (-3}):\nmaterial thermal conductivity</li>\n<li><strong>dT : Quantity {temperature</strong> (1}):\ntemperature difference, T_i - T_o</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {length: 2, mass: 1, time</strong> (-3}):\nheat flow rate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D_i</span>, </span><span class=\"param\"><span class=\"n\">D_o</span>, </span><span class=\"param\"><span class=\"n\">L</span>, </span><span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">dT</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Re", "modulename": "CryoToolBox.functions", "qualname": "Re", "kind": "function", "doc": "<p>Calculate Reynolds number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</p></li>\n<li><p><strong>m_dot</strong> (mass flow):</p></li>\n<li><p><strong>D_H</strong> (hydraulic diameter of a pipe):</p></li>\n<li><p><strong>A_cross</strong> (cross-sectional area of a pipe):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Reynolds number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">D_H</span>, </span><span class=\"param\"><span class=\"n\">A_cross</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Pr", "modulename": "CryoToolBox.functions", "qualname": "Pr", "kind": "function", "doc": "<p>Calculate Prandtl number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Prandtl number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Gr", "modulename": "CryoToolBox.functions", "qualname": "Gr", "kind": "function", "doc": "<p>Calculate Grashof number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</p></li>\n<li><p><strong>T_surf</strong> (surface temperature):</p></li>\n<li><p><strong>L_surf</strong> (characteristic length):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Grashof number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">T_surf</span>, </span><span class=\"param\"><span class=\"n\">L_surf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Ra", "modulename": "CryoToolBox.functions", "qualname": "Ra", "kind": "function", "doc": "<p>Calculate Rayleigh number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</p></li>\n<li><p><strong>T_surf</strong> (surface temperature):</p></li>\n<li><p><strong>L_surf</strong> (characteristic length):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Rayleigh number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">T_surf</span>, </span><span class=\"param\"><span class=\"n\">L_surf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.mean_free_path", "modulename": "CryoToolBox.functions", "qualname": "mean_free_path", "kind": "function", "doc": "<p>Calculate mean free path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mean free path, dimensionless.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Kn", "modulename": "CryoToolBox.functions", "qualname": "Kn", "kind": "function", "doc": "<p>Calculate Knudsen number.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</p></li>\n<li><p><strong>L</strong> (characteristic length):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Knudsen number, dimensionless</strong></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The Knudsen number can be used to determine the flow regime:\n$Kn &lt; 0.01$: Continuum flow\n$0.01 &lt; Kn &lt; 0.1$: Slip flow\n$0.1 &lt; Kn &lt; 10$: Transitional flow\n$Kn &gt; 10$: Free molecular flow</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">L</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_blend", "modulename": "CryoToolBox.functions", "qualname": "Nu_blend", "kind": "function", "doc": "<p>Calculate Nu number using blending equation of Churchill and Usagi.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.32).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Nu_lam</span>, </span><span class=\"param\"><span class=\"n\">Nu_turb</span>, </span><span class=\"param\"><span class=\"n\">m</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.C_t_V", "modulename": "CryoToolBox.functions", "qualname": "C_t_V", "kind": "function", "doc": "<p>Calculate turbulent coefficient C_t for vertical wall.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.24).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.C_l", "modulename": "CryoToolBox.functions", "qualname": "C_l", "kind": "function", "doc": "<p>Calculate thin-layer coefficient C_l.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.13).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_T_vplate", "modulename": "CryoToolBox.functions", "qualname": "Nu_T_vplate", "kind": "function", "doc": "<p>Calculate thin-layer Nu number for a vertical isothermal plate.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.33a).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_l_vplate", "modulename": "CryoToolBox.functions", "qualname": "Nu_l_vplate", "kind": "function", "doc": "<p>Calculate laminar Nu number for a vertical isothermal plate.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.33b).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_t_vplate", "modulename": "CryoToolBox.functions", "qualname": "Nu_t_vplate", "kind": "function", "doc": "<p>Calculate turbulent Nu number for a vertical isothermal plate.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.33c).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_vplate", "modulename": "CryoToolBox.functions", "qualname": "Nu_vplate", "kind": "function", "doc": "<p>Calculate Nusselt number for a vertical isothermal plate.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.33d).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_T_hcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_T_hcyl", "kind": "function", "doc": "<p>Calculate thin-layer Nusselt number for isothermal horizontal cylinder.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.45a).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_l_hcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_l_hcyl", "kind": "function", "doc": "<p>Calculate laminar Nusselt number for isothermal horizontal cylinder.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.45b).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_t_hcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_t_hcyl", "kind": "function", "doc": "<p>Calculate turbulent Nusselt number for isothermal horizontal cylinder.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.45c).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Ra_</span>, </span><span class=\"param\"><span class=\"n\">C_t_bar</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.C_t_bar_cyl", "modulename": "CryoToolBox.functions", "qualname": "C_t_bar_cyl", "kind": "function", "doc": "<p>Interpolate value of the turbulent coefficient C_t for isothermal\nhorizontal cylinder (C/L=1).\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) Table 4.2.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_hcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_hcyl", "kind": "function", "doc": "<p>Calculate Nusselt number for isothermal horizontal cylinder.\nOnly natural convection currently supported.\nBased on Handbook of heat transfer by Rohsenow, Hartnet,\nCho (HHT) (4.45d)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Nusselt number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_l_vcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_l_vcyl", "kind": "function", "doc": "<p>Calculate laminar Nusselt number for vertical cylinder.\nFrom Handbook of heat transfer by Rohsenow, Hartnet, Cho (HHT) (4.44).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span>, </span><span class=\"param\"><span class=\"n\">D_cyl</span>, </span><span class=\"param\"><span class=\"n\">L_cyl</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Nu_vcyl", "modulename": "CryoToolBox.functions", "qualname": "Nu_vcyl", "kind": "function", "doc": "<p>Calculate Nusselt number for vertical isothermal cylinder.\nOnly natural convection currently supported.\nBased on Handbook of heat transfer by Rohsenow, Hartnet,\nCho (HHT).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>Pr_</strong> (Prandtl number):</p></li>\n<li><p><strong>Ra_</strong> (Rayleigh number):</p></li>\n<li><p><strong>D_cyl</strong> (cylinder diameter):</p></li>\n<li><p><strong>L_cyl</strong> (cylinder length):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Nusselt number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Pr_</span>, </span><span class=\"param\"><span class=\"n\">Ra_</span>, </span><span class=\"param\"><span class=\"n\">D_cyl</span>, </span><span class=\"param\"><span class=\"n\">L_cyl</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.heat_trans_coef", "modulename": "CryoToolBox.functions", "qualname": "heat_trans_coef", "kind": "function", "doc": "<p>Calculate heat transfer coefficient.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>fluid</strong> (ThermState object describing thermodynamic state (fluid, T, P)):</p></li>\n<li><p><strong>Nu</strong> (Nusselt number):</p></li>\n<li><p><strong>L_surf</strong> (characteristic length:):\n:Horizontal cylinder: L_surf = D_cyl\n:Vertical cylinder: L_surf = L_cyl</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>heat transfer coefficient</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">Nu</span>, </span><span class=\"param\"><span class=\"n\">L_surf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Bi", "modulename": "CryoToolBox.functions", "qualname": "Bi", "kind": "function", "doc": "<p>Calculate Biot number for a solid.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>k</strong> (thermal conductivity of the solid):</p></li>\n<li><p><strong>L_c</strong> (characteristic length; L_c = V/A_s, where):\nV : volume of the solid\nA_s : surface area of the solid</p></li>\n<li><strong>h</strong> (heat transfer coefficient):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Biot number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">L_c</span>, </span><span class=\"param\"><span class=\"n\">h</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.C1_cyl", "modulename": "CryoToolBox.functions", "qualname": "C1_cyl", "kind": "function", "doc": "<p>Calculate first term C1 coefficient for infinite cylinder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Bi_</strong> (Biot number):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>C1 for infinite cylinder</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Bi_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.zeta1_cyl", "modulename": "CryoToolBox.functions", "qualname": "zeta1_cyl", "kind": "function", "doc": "<p>Calculate first term zeta1 coefficient for infinite cylinder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Bi_</strong> (Biot number):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>zeta1 for infinite cylinder</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Bi_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Fo_cyl", "modulename": "CryoToolBox.functions", "qualname": "Fo_cyl", "kind": "function", "doc": "<p>Calculate Fourier number for infinite cylinder using approximate solution.\nApproximate solution is applicable when the solid has uniform temperature.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>theta</strong> (dimensionless temperature difference):</p></li>\n<li><p><strong>Bi_</strong> (Biot number):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Fourier number, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">theta</span>, </span><span class=\"param\"><span class=\"n\">Bi_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.alpha", "modulename": "CryoToolBox.functions", "qualname": "alpha", "kind": "function", "doc": "<p>Calculate thermal diffusivity.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>k</strong> (thermal conductivity of the solid):</p></li>\n<li><p><strong>rho</strong> (density of the solid):</p></li>\n<li><p><strong>C</strong> (specific heat capacity):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>thermal diffusivity</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">rho</span>, </span><span class=\"param\"><span class=\"n\">C</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.theta_temp", "modulename": "CryoToolBox.functions", "qualname": "theta_temp", "kind": "function", "doc": "<p>Calculate dimensionless temperature difference. Used for transient\nconduction and convection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>T</strong> (variable temperature of the solid):</p></li>\n<li><p><strong>T_i</strong> (initially uniform temperature of the solid):</p></li>\n<li><p><strong>T_inf</strong> (temperature of the medium):</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>temperature difference, dimensionless</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">T</span>, </span><span class=\"param\"><span class=\"n\">T_i</span>, </span><span class=\"param\"><span class=\"n\">T_inf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.nist_property", "modulename": "CryoToolBox.functions", "qualname": "nist_property", "kind": "function", "doc": "<p>Calculate specific heat capacity using NIST properties database.\n<a href=\"https://trc.nist.gov/cryogenics/materials/materialproperties.htm\">https://trc.nist.gov/cryogenics/materials/materialproperties.htm</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>T1</strong> (Quantity, temperature):</p></li>\n<li><p><strong>T2</strong> (Quantity, temperature):\nused for average value calculation</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>specific heat capacity</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">material</span>, </span><span class=\"param\"><span class=\"n\">prop</span>, </span><span class=\"param\"><span class=\"n\">T1</span>, </span><span class=\"param\"><span class=\"n\">T2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">RRR_OFHC</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.Material", "modulename": "CryoToolBox.functions", "qualname": "Material", "kind": "class", "doc": "<p>Available materials with low temperature with fits NIST.</p>\n", "bases": "enum.Enum"}, {"fullname": "CryoToolBox.functions.Material.SS304", "modulename": "CryoToolBox.functions", "qualname": "Material.SS304", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Material.SS304: 1&gt;"}, {"fullname": "CryoToolBox.functions.Material.AL6061", "modulename": "CryoToolBox.functions", "qualname": "Material.AL6061", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Material.AL6061: 2&gt;"}, {"fullname": "CryoToolBox.functions.Material.G10", "modulename": "CryoToolBox.functions", "qualname": "Material.G10", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Material.G10: 3&gt;"}, {"fullname": "CryoToolBox.functions.Material.PTFE", "modulename": "CryoToolBox.functions", "qualname": "Material.PTFE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Material.PTFE: 4&gt;"}, {"fullname": "CryoToolBox.functions.Material.OFHC", "modulename": "CryoToolBox.functions", "qualname": "Material.OFHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Material.OFHC: 5&gt;"}, {"fullname": "CryoToolBox.functions.Property", "modulename": "CryoToolBox.functions", "qualname": "Property", "kind": "class", "doc": "<p>Available low temperature properties from NIST.</p>\n", "bases": "enum.Enum"}, {"fullname": "CryoToolBox.functions.Property.TC", "modulename": "CryoToolBox.functions", "qualname": "Property.TC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Property.TC: 1&gt;"}, {"fullname": "CryoToolBox.functions.Property.SH", "modulename": "CryoToolBox.functions", "qualname": "Property.SH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Property.SH: 2&gt;"}, {"fullname": "CryoToolBox.functions.Property.EC", "modulename": "CryoToolBox.functions", "qualname": "Property.EC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Property.EC: 3&gt;"}, {"fullname": "CryoToolBox.functions.Property.LE", "modulename": "CryoToolBox.functions", "qualname": "Property.LE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Property.LE: 4&gt;"}, {"fullname": "CryoToolBox.functions.stored_energy", "modulename": "CryoToolBox.functions", "qualname": "stored_energy", "kind": "function", "doc": "<p>Calculate stored energy in volume using Baker equation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">volume</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.blast_radius", "modulename": "CryoToolBox.functions", "qualname": "blast_radius", "kind": "function", "doc": "<p>Calculate maximum distance for debris, eardrum rupture and\nlung damage based on PNNL paper.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">E_stored</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.ks_Dacron", "modulename": "CryoToolBox.functions", "qualname": "ks_Dacron", "kind": "function", "doc": "<p>Calculate thermal conductivity of Dacron spacer, Barron 1.57</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Tc</strong> (Quantity {temperature}):\nCold temperature.</li>\n<li><strong>T0</strong> (Quantity {temperature}, optional):\nHot temperature (default: 300 K).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ks : Quantity {'[length]': 1, '[mass]': 1, '[temperature]': -1, '[time]'</strong> (-3}):\nThermal conductivity of Dacron spacer.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Tc</span>, </span><span class=\"param\"><span class=\"n\">T0</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kelvin&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.hc_Dacron", "modulename": "CryoToolBox.functions", "qualname": "hc_Dacron", "kind": "function", "doc": "<p>Calculate solid conductance of Dacron spacer, Barron 1.56</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Tc</strong> (Quantity {temperature}):\nCold temperature.</li>\n<li><strong>T0</strong> (Quantity {temperature}, optional):\nHot temperature (default: 300 K).</li>\n<li><strong>ts</strong> (Quantity {length}, optional):\nThickness of the spacer (default: 0.06 mm).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hc : Quantity {'[mass]': 1, '[temperature]': -1, '[time]'</strong> (-3}):\nSolid conductance of Dacron spacer.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Tc</span>, </span><span class=\"param\"><span class=\"n\">T0</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kelvin&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>, </span><span class=\"param\"><span class=\"n\">ts</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.06</span><span class=\"p\">,</span> <span class=\"s1\">&#39;millimeter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.functions.k_MLI", "modulename": "CryoToolBox.functions", "qualname": "k_MLI", "kind": "function", "doc": "<p>Calculate apparent thermal conductivity of MLI, Barron 1.55</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ndx : Quantity {length</strong> (-1}):\nMLI layer density.</li>\n<li><strong>hc : Quantity {'[mass]': 1, '[temperature]': -1, '[time]'</strong> (-3}):\nMLI spacer conductance.</li>\n<li><strong>Tc</strong> (Quantity {temperature}):\nCold temperature.</li>\n<li><strong>T0</strong> (Quantity {temperature}, optional):\nHot temperature (default: 300 K).</li>\n<li><strong>e</strong> (float, optional):\nEmissivity (default: 0.04).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>kt : Quantity {'[length]': 1, '[mass]': 1, '[temperature]': -1, '[time]'</strong> (-3}):\nApparent thermal conductivity of MLI.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ndx</span>, </span><span class=\"param\"><span class=\"n\">hc</span>, </span><span class=\"param\"><span class=\"n\">Tc</span>, </span><span class=\"param\"><span class=\"n\">T0</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kelvin&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>, </span><span class=\"param\"><span class=\"n\">e</span><span class=\"o\">=</span><span class=\"mf\">0.04</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.geometry", "modulename": "CryoToolBox.geometry", "kind": "module", "doc": "<p>Helper geometrical functions.</p>\n"}, {"fullname": "CryoToolBox.geometry.circle_area", "modulename": "CryoToolBox.geometry", "qualname": "circle_area", "kind": "function", "doc": "<p>Calculate the area of a circle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D : ureg.Quantity {length</strong> (1}):\nThe diameter of the circle.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (2}):\nThe area of the circle.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The formula for calculating the area of a circle is:</p>\n\n<p>$$A = \\frac{\\pi D^2}{4}$$</p>\n\n<p>where:</p>\n\n<ul>\n<li>( A ) is the area of the circle,</li>\n<li>( D ) is the diameter of the circle,</li>\n<li>( \\pi ) is a mathematical constant, approximately 3.14159.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">circle_area</span><span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">meter</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(12.566370614359172, &#39;meter ** 2&#39;)&gt;</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">circle_area</span><span class=\"p\">(</span><span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(4.908738521234052, &#39;inch ** 2&#39;)&gt;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.geometry.cylinder_volume", "modulename": "CryoToolBox.geometry", "qualname": "cylinder_volume", "kind": "function", "doc": "<p>Calculate the volume of a cylinder.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D : ureg.Quantity {length</strong> (1}):\nThe diameter of the cylinder.</li>\n<li><strong>H : ureg.Quantity {length</strong> (1}):\nThe height of the cylinder.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity</strong>: The volume of the cylinder.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The formula for calculating the volume of a cylinder is:</p>\n\n<p>$$V = \\frac{\\pi D^2 H}{4}$$</p>\n\n<p>where:</p>\n\n<ul>\n<li>( V ) is the volume of the cylinder,</li>\n<li>( D ) is the diameter of the cylinder,</li>\n<li>( H ) is the height of the cylinder,</li>\n<li>( \\pi ) is a mathematical constant, approximately 3.14159.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cylinder_volume</span><span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">meter</span><span class=\"p\">,</span> <span class=\"mi\">6</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">meter</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(75.39822368615503, &#39;meter ** 3&#39;)&gt;</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cylinder_volume</span><span class=\"p\">(</span><span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">8</span> <span class=\"o\">*</span> <span class=\"n\">ureg</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(19.634954084936208, &#39;inch ** 3&#39;)&gt;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D</span>, </span><span class=\"param\"><span class=\"n\">H</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state", "modulename": "CryoToolBox.heprop_state", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.heprop_state.HEPAK_inputs", "modulename": "CryoToolBox.heprop_state", "qualname": "HEPAK_inputs", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;P&#x27;: 1, &#x27;T&#x27;: 2, &#x27;D&#x27;: 3, &#x27;V&#x27;: 4, &#x27;S&#x27;: 5, &#x27;Smass&#x27;: 5, &#x27;H&#x27;: 6, &#x27;Hmass&#x27;: 6, &#x27;U&#x27;: 7, &#x27;G&#x27;: 8, &#x27;X&#x27;: 9, &#x27;Q&#x27;: 9, &#x27;dT&#x27;: 10, &#x27;M&#x27;: 11, &#x27;2&#x27;: 12, &#x27;sL&#x27;: 13, &#x27;sV&#x27;: 14, &#x27;L&#x27;: 15}"}, {"fullname": "CryoToolBox.heprop_state.init_he", "modulename": "CryoToolBox.heprop_state", "qualname": "init_he", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.hecalc", "modulename": "CryoToolBox.heprop_state", "qualname": "hecalc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">j1</span>, </span><span class=\"param\"><span class=\"n\">value1</span>, </span><span class=\"param\"><span class=\"n\">j2</span>, </span><span class=\"param\"><span class=\"n\">value2</span>, </span><span class=\"param\"><span class=\"n\">unit</span>, </span><span class=\"param\"><span class=\"n\">dll</span>, </span><span class=\"param\"><span class=\"n\">err</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.heprop_state.HepropState.__init__", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">state_parameters</span></span>)</span>"}, {"fullname": "CryoToolBox.heprop_state.HepropState.update", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name1</span>, </span><span class=\"param\"><span class=\"n\">value1</span>, </span><span class=\"param\"><span class=\"n\">name2</span>, </span><span class=\"param\"><span class=\"n\">value2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.T_critical", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.T_critical", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.p_critical", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.p_critical", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.rhomolar_critical", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.rhomolar_critical", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.rhomass_critical", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.rhomass_critical", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.T", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.T", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.rhomolar", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.rhomolar", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.rhomass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.rhomass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.p", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.p", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.Q", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.Q", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.molar_mass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.molar_mass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.gas_constant", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.gas_constant", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.compressibility_factor", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.compressibility_factor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.hmolar", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.hmolar", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.hmass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.hmass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.smolar", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.smolar", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.smass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.smass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.cpmolar", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.cpmolar", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.cpmass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.cpmass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.cvmolar", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.cvmolar", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.cvmass", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.cvmass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.viscosity", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.viscosity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.conductivity", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.conductivity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.surface_tension", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.surface_tension", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.p_reducing", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.p_reducing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.ptriple", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.ptriple", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.pmax", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.pmax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.T_reducing", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.T_reducing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.Ttriple", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.Ttriple", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.Tmax", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.Tmax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.Tmin", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.Tmin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.isothermal_compressibility", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.isothermal_compressibility", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.isobaric_expansion_coefficient", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.isobaric_expansion_coefficient", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.isentropic_expansion_coefficient", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.isentropic_expansion_coefficient", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.Prandtl", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.Prandtl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.speed_sound", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.speed_sound", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.name", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.backend_name", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.backend_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.phase", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.phase", "kind": "function", "doc": "<ul>\n<li>0: Subcritical liquid</li>\n<li>1: Supercritical (p &gt; pc, T &gt; Tc)</li>\n<li>2: Supercritical gas (p &lt; pc, T &gt; Tc)</li>\n<li>3: Supercritical liquid (p &gt; pc, T &lt; Tc)</li>\n<li>4: At the critical point.</li>\n<li>5: Subcritical gas.</li>\n<li>6: Two phase.</li>\n<li>7: Unknown phase</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.heprop_state.HepropState.specific_heat_input", "modulename": "CryoToolBox.heprop_state", "qualname": "HepropState.specific_heat_input", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh", "modulename": "CryoToolBox.odh", "kind": "module", "doc": "<p>odh - Oxygen Deficiency Hazard analysis tool.</p>\n\n<p>Based on Fermilab ES&amp;H Manual chapter 4240 (see\n<a href=\"https://eshq.fnal.gov/manuals/feshm/\">https://eshq.fnal.gov/manuals/feshm/</a>)</p>\n"}, {"fullname": "CryoToolBox.odh.PFD_ODH", "modulename": "CryoToolBox.odh", "qualname": "PFD_ODH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(0.002, &#x27;dimensionless&#x27;)&gt;"}, {"fullname": "CryoToolBox.odh.lambda_ODH", "modulename": "CryoToolBox.odh", "qualname": "lambda_ODH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(2.3e-06, &#x27;1 / hour&#x27;)&gt;"}, {"fullname": "CryoToolBox.odh.TRANSFER_LINE_LEAK_AREA", "modulename": "CryoToolBox.odh", "qualname": "TRANSFER_LINE_LEAK_AREA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(10, &#x27;millimeter ** 2&#x27;)&gt;"}, {"fullname": "CryoToolBox.odh.ASHRAE_MIN_FLOW", "modulename": "CryoToolBox.odh", "qualname": "ASHRAE_MIN_FLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(0.06, &#x27;foot / minute&#x27;)&gt;"}, {"fullname": "CryoToolBox.odh.ODHError", "modulename": "CryoToolBox.odh", "qualname": "ODHError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.odh.ConstLeakTooBig", "modulename": "CryoToolBox.odh", "qualname": "ConstLeakTooBig", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.odh.ConstLeakNoVent", "modulename": "CryoToolBox.odh", "qualname": "ConstLeakNoVent", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.odh.Leak", "modulename": "CryoToolBox.odh", "qualname": "Leak", "kind": "function", "doc": "<p>Describe inert gas leak from a Source</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">failure_rate</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span><span class=\"p\">:</span> <span class=\"n\">CryoToolBox</span><span class=\"o\">.</span><span class=\"n\">cp_wrapper</span><span class=\"o\">.</span><span class=\"n\">ThermState</span>,</span><span class=\"param\">\t<span class=\"n\">q_std</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">N_events</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.ConstLeak", "modulename": "CryoToolBox.odh", "qualname": "ConstLeak", "kind": "function", "doc": "<p>ConstLeak(name: str, fluid: CryoToolBox.cp_wrapper.ThermState, q_std: pint.Quantity, tau: pint.Quantity)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span><span class=\"p\">:</span> <span class=\"n\">CryoToolBox</span><span class=\"o\">.</span><span class=\"n\">cp_wrapper</span><span class=\"o\">.</span><span class=\"n\">ThermState</span>,</span><span class=\"param\">\t<span class=\"n\">q_std</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source", "modulename": "CryoToolBox.odh", "qualname": "Source", "kind": "class", "doc": "<p>Source of inert gas</p>\n"}, {"fullname": "CryoToolBox.odh.Source.__init__", "modulename": "CryoToolBox.odh", "qualname": "Source.__init__", "kind": "function", "doc": "<p>Define the possible source of inert gas.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the source.</li>\n<li><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</li>\n<li><strong>liquid_volume</strong> (ureg.Quantity, [length]^3):\nLiquid volume of the source.</li>\n<li><strong>volume</strong> (ureg.Quantity, [length]^3):\nStandard volume of the fluid contained in the source.</li>\n<li><strong>N</strong> (int):\nNumber of the sources if several similar sources exist,\ne.g. gas bottles.</li>\n<li><strong>PFD_isol_valve</strong> (float):\nProbability of failure on demand of source isolation valve.\nIf no isolation valve will trigger on ODH alarm, the probability\nis 1 (default).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">volume</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">PFD_isol_valve</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, {"fullname": "CryoToolBox.odh.Source.name", "modulename": "CryoToolBox.odh", "qualname": "Source.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.fluid", "modulename": "CryoToolBox.odh", "qualname": "Source.fluid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.leaks", "modulename": "CryoToolBox.odh", "qualname": "Source.leaks", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.N", "modulename": "CryoToolBox.odh", "qualname": "Source.N", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.liquid_volume", "modulename": "CryoToolBox.odh", "qualname": "Source.liquid_volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.volume", "modulename": "CryoToolBox.odh", "qualname": "Source.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.PFD_isol_valve", "modulename": "CryoToolBox.odh", "qualname": "Source.PFD_isol_valve", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Source.add_pipe_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_pipe_failure", "kind": "function", "doc": "<p>Add pipe failure to the leaks dict.</p>\n\n<p>For a given tube calculate leak parameters as following:</p>\n\n<ul>\n<li>failure rate</li>\n<li>standard volumetric flow</li>\n<li>duration of the release</li>\n<li>number of possible similar events\nfor all failure modes for piping and welds listed in Table 2 of\nFESHM 4240.</li>\n</ul>\n\n<p>Failure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>tube</strong> (heat_transfer.piping.Tube):</p></li>\n<li><p><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid for the release.</p></li>\n<li><strong>q_std_rupture</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate for pipe rupture.</li>\n<li><strong>N_welds</strong> (int):\nNumber of welds on the tube.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tube</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">q_std_rupture</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">N_welds</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_dewar_insulation_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_dewar_insulation_failure", "kind": "function", "doc": "<p>Add dewar insulation failure to leaks dict.</p>\n\n<p>Store failure rate, flow rate and expected time duration of the\nfailure event for the dewar insulation failure. Based on FESHM4240.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>q_std</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate of the relief for the case of\ndewar insulation failure.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">q_std</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_flange_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_flange_failure", "kind": "function", "doc": "<p>Add reinforced or preformed gasket flange failure\nto leaks dict.</p>\n\n<p>Store failure rate, flow rate and expected time duration of\nthe event for transfer line failure. Based on FESHM 4240.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>pipe</strong> (heat_transfer.Pipe):</p></li>\n<li><p><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</p></li>\n<li><strong>q_std_rupture</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate for flange rupture.</li>\n<li><strong>N</strong> (int):\nNumber of reinforced seal connections on the pipe.</li>\n<li><strong>gasket_type</strong> (str):\nType of the gasket in the flange, 'soft' or 'reinforced'.</li>\n<li><strong>blowout_area</strong> (Quantity [length^2]):\nLeak area in case of the soft gasket blowout. Not applicable for reinforced gaskets.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pipe</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">q_std_rupture</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">gasket_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;reinforced&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">blowout_area</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_valve_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_valve_failure", "kind": "function", "doc": "<p>Add valve leak and rupture failure modes to leaks dict.</p>\n\n<p>Store failure rate, flow rate and expected time duration of\nthe event for transfer line failure. Based on FESHM 4240.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pipe</strong> (heat_transfer.Pipe):\nPipe/tube upstream the valve.</li>\n<li><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</li>\n<li><strong>q_std_rupture</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate for flange rupture.</li>\n<li><strong>N</strong> (int):\nNumber of valves</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pipe</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">q_std_rupture</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_line_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_line_failure", "kind": "function", "doc": "<p>Add leaks for pipe, weld, flange, and valve failures.</p>\n\n<p>Store failure rate, flow rate and expected time duration of\nthe event for pipe, weld, flange, and valve failures. Based on\nFESHM 4240. Failure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pipe</strong> (heat_transfer.Pipe):\nPipe/tube upstream the valve.</li>\n<li><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</li>\n<li><strong>N_welds</strong> (int):\nNumber of welds on the line.</li>\n<li><strong>N_reinforced</strong> (int):\nNumber of flanges with reinforced, preformed or metal gaskets on the line.</li>\n<li><strong>N_soft</strong> (int):\nNumber of flanges with soft gaskets on the line.</li>\n<li><strong>N_valves</strong> (int):\nNumber of valves on the line.</li>\n<li><strong>q_std_rupture</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate for flange rupture.</li>\n<li><strong>blowout_area</strong> (Quantity [length^2]):\nLeak area in case of the soft gasket blowout. Not applicable for reinforced gaskets.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pipe</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">N_welds</span>,</span><span class=\"param\">\t<span class=\"n\">N_reinforced</span>,</span><span class=\"param\">\t<span class=\"n\">N_soft</span>,</span><span class=\"param\">\t<span class=\"n\">N_valves</span>,</span><span class=\"param\">\t<span class=\"n\">q_std_rupture</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">blowout_area</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_pressure_vessel_failure", "modulename": "CryoToolBox.odh", "qualname": "Source.add_pressure_vessel_failure", "kind": "function", "doc": "<p>Add pressure vessel failure to leaks dict.</p>\n\n<p>Store failure rate, flow rate and expected time duration of\nthe event for transfer line failure. Based on FESHM 4240.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>relief_area</strong> (ureg.Quantity, [length]^2):\nVacuum jacket relief area if the vessel has one, None otherwise.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">relief_area</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_const_leak", "modulename": "CryoToolBox.odh", "qualname": "Source.add_const_leak", "kind": "function", "doc": "<p>Add constant leak to leaks dict.</p>\n\n<p>Store flow rate and expected time duration of the\nfailure event for general failure mode.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the failure mode</li>\n<li><strong>fluid</strong> (ThermState):\nThermodynamic state of the fluid at the leak location.</li>\n<li><strong>q_std</strong> (ureg.Quantity, [length**3/time]):\nStandard volumetric flow rate.</li>\n<li><strong>N</strong> (int):\nNumber of leaks.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">q_std</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.add_failure_mode", "modulename": "CryoToolBox.odh", "qualname": "Source.add_failure_mode", "kind": "function", "doc": "<p>Add general failure mode to leaks dict.</p>\n\n<p>Store failure rate, flow rate and expected time duration of the\nfailure event for general failure mode.\nFailure modes are analyzed by <code>Volume.odh</code> method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the failure mode</li>\n<li><strong>failure rate</strong> (ureg.Quantity, 1/[time]):\nFailure rate of the failure mode,\ni.e. how often the failure occurs</li>\n<li><strong>fluid</strong> (ThermState):\nFluid state at the release location.</li>\n<li><strong>q_std</strong> (ureg.Quantity, [length]^3/[time]):\nStandard volumetric flow rate.</li>\n<li><strong>N</strong> (int):\nNumber of similar failure modes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">failure_rate</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">q_std</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.combine", "modulename": "CryoToolBox.odh", "qualname": "Source.combine", "kind": "function", "doc": "<p>Combine several ODH sources sharing volume.</p>\n\n<p>Can be used for failure modes affecting several sources in parallel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the new combined source.</li>\n<li><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</li>\n<li><strong>sources</strong> (list of Source):\nSources connected together.</li>\n<li><strong>N</strong> (int):\nNumber of the sources if several similar sources exist,\ne.g. gas bottles.</li>\n<li><strong>PFD_isol_valve</strong> (float):\nProbability of failure on demand of source isolation valve.\nIf no isolation valve will trigger on ODH alarm, the probability\nis 1 (default).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Source</strong>: Combined source of inert gas.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">sources</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">PFD_isol_valve</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Source.print_leaks", "modulename": "CryoToolBox.odh", "qualname": "Source.print_leaks", "kind": "function", "doc": "<p>Print information on the leaks defined for the source.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.FailureMode", "modulename": "CryoToolBox.odh", "qualname": "FailureMode", "kind": "function", "doc": "<p>Describes ODH failure modes, a combination of a leak and response to it.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">CryoToolBox</span><span class=\"o\">.</span><span class=\"n\">odh</span><span class=\"o\">.</span><span class=\"n\">Source</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span><span class=\"p\">:</span> <span class=\"n\">CryoToolBox</span><span class=\"o\">.</span><span class=\"n\">cp_wrapper</span><span class=\"o\">.</span><span class=\"n\">ThermState</span>,</span><span class=\"param\">\t<span class=\"n\">phi</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">O2_conc</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">leak_fr</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">P_i</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">F_i</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">outage</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">q_leak</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">Q_fan</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">N_fan</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">N</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">is_const</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">scenario</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.BuildPower", "modulename": "CryoToolBox.odh", "qualname": "BuildPower", "kind": "function", "doc": "<p>Dataclass representing the electrical power failure scenario of a building.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>power_pfd</strong> (float):\nThe probability of failure demand rate.</li>\n<li><strong>backup_pfd</strong> (float):\nThe probability of backup system failure.</li>\n<li><strong>lambda_power</strong> (ureg.Quantity, 1/[time]):\nThe rate of power failure occurrences.</li>\n<li><strong>max_outage</strong> (ureg.Quantity, [time]):\nThe maximum duration of an outage.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>pfd : float\n    The total probability of a power failure, taking into account both\n    the power probability of failure on demand and the backup system\n    reliability.</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">power_pfd</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dimensionless&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">backup_pfd</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">lambda_power</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1 / hour&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">max_outage</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"n\">inf</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hour&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.BuildVent", "modulename": "CryoToolBox.odh", "qualname": "BuildVent", "kind": "function", "doc": "<p>Dataclass representing the ventilation system of a building.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>Q_fan</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric flow of a single ODH fan installed in the volume.</li>\n<li><strong>N_fans</strong> (int):\nNumber of fans installed.</li>\n<li><strong>Test_period</strong> (ureg.Quantity, [time]):\nTest period of the fans and dampers.</li>\n<li><strong>lambda_fan</strong> (ureg.Quantity, 1/[time]):\nFailure rate of the fans in the building.</li>\n<li><strong>const_vent</strong> (ureg.Quantity, [length]^3/[time]):\nMin volumetric flow required or present in the building.</li>\n<li><strong>PFD_ODH</strong> (float):\nThe default value for the oxygen deficiency hazard (ODH) system failure.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>None</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>fan_flowrates() -> List[Tuple[float, ureg.Quantity, int]]:\n    Calculate (probability, flow, number of fans) tuples for all\n    combinations of fans working. All fans are expected to have the same\n    volumetric flow.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">Q_fan</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">N_fans</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">Test_period</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span>,</span><span class=\"param\">\t<span class=\"n\">lambda_fan</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">9e-06</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1 / hour&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">const_vent</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;foot ** 3 / minute&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">PFD_ODH</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.002</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dimensionless&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Volume", "modulename": "CryoToolBox.odh", "qualname": "Volume", "kind": "class", "doc": "<p>A class to represent a building or a part of a building that is affected by\ninert gas leaks.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the volume.</li>\n<li><strong>volume</strong> (ureg.Quantity, [length]^3):\nThe volume of the building or part of the building.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the volume.</li>\n<li><strong>volume</strong> (ureg.Quantity, [length]^3):\nThe volume of the building or part of the building.</li>\n<li><strong>vent</strong> (BuildVent):\nThe ventilation system of the building or part of the building.</li>\n<li><strong>power</strong> (BuildPower):\nThe power system of the building or part of the building.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>info()\n    Display information on the volume.\nodh(sources, power_outage=False)\n    Calculate ODH fatality rate for given <code>Source</code>s.\n_fatality_no_power(source, leak, power_outage)\n    Calculate fatality rate in the event of power failure.\n_fatality_no_odh(source, leak)\n    Calculate fatality rate in the event of ODH system failure.\n_fatality_with_fans(source, leak)\n    Calculate fatality rate for any number of fans operational.\n_add_failure_mode(P_event, tau_event, failure_rate, source, leak, Q_fan,\n    N_fans, power_outage)\n    Add a failure mode.\n_fatality_const_leak(source, leak, power_outage)\n    Calculate fatality rates for constant leak case.\n_fatality_prob(O2_conc)\n    Calculate fatality probability for given oxygen concentration.</p>\n"}, {"fullname": "CryoToolBox.odh.Volume.__init__", "modulename": "CryoToolBox.odh", "qualname": "Volume.__init__", "kind": "function", "doc": "<p>Define a volume affected by inert gas release from  a <code>Source</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the volume.</li>\n<li><strong>volume</strong> (ureg.Quantity, [length]^3):\nVolume of the building or part of the building.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">volume</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">build_vent</span>, </span><span class=\"param\"><span class=\"n\">build_power</span></span>)</span>"}, {"fullname": "CryoToolBox.odh.Volume.name", "modulename": "CryoToolBox.odh", "qualname": "Volume.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Volume.volume", "modulename": "CryoToolBox.odh", "qualname": "Volume.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Volume.vent", "modulename": "CryoToolBox.odh", "qualname": "Volume.vent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Volume.power", "modulename": "CryoToolBox.odh", "qualname": "Volume.power", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Volume.info", "modulename": "CryoToolBox.odh", "qualname": "Volume.info", "kind": "function", "doc": "<p>Display information on the volume.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Volume.odh", "modulename": "CryoToolBox.odh", "qualname": "Volume.odh", "kind": "function", "doc": "<p>Calculate ODH fatality rate for given <code>Source</code>s.</p>\n\n<p>For each leak of each source ODH conditions are analyzed and\nfatality rates are calculated. The results are collected in\nfail_modes list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sources</strong> (List[Source]):\nSources affecting the volume.</li>\n<li><strong>power_outage</strong> (bool):\nShows whether there is a power outage is in effect.\nDefault is no outage.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sources</span>, </span><span class=\"param\"><span class=\"n\">power_outage</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Volume.odh_class", "modulename": "CryoToolBox.odh", "qualname": "Volume.odh_class", "kind": "variable", "doc": "<p>Calculate ODH class as defined in FESHM 4240.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int</strong>: ODH class.</li>\n</ul>\n"}, {"fullname": "CryoToolBox.odh.Volume.phi", "modulename": "CryoToolBox.odh", "qualname": "Volume.phi", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.odh.Volume.make_doc_table", "modulename": "CryoToolBox.odh", "qualname": "Volume.make_doc_table", "kind": "function", "doc": "<p>Make a short table for failure modes and effects to be included to a document.</p>\n\n<p>The report is sorted by fatality rate descending.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sens</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.Volume.make_excel_table", "modulename": "CryoToolBox.odh", "qualname": "Volume.make_excel_table", "kind": "function", "doc": "<p>Make a table with the calculation results.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">&#39;ODH_report&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.prob_m_of_n", "modulename": "CryoToolBox.odh", "qualname": "prob_m_of_n", "kind": "function", "doc": "<p>Calculate the probability of m out of n units working.</p>\n\n<p>Calculation is done using binomial distribution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>m</strong> (int):\nNumber of units working.</li>\n<li><strong>n</strong> (int):\nTotal number of units.</li>\n<li><strong>T</strong> (ureg.Quantity, [time]):\nTest period</li>\n<li><strong>l</strong> (ureg.Quantity, 1/[time]):\nFailure rate (\\lambda) of a fan</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Probability of m out of n units working.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m</span>, </span><span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">T</span>, </span><span class=\"param\"><span class=\"n\">l</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.conc_vent", "modulename": "CryoToolBox.odh", "qualname": "conc_vent", "kind": "function", "doc": "<p>Calculate the oxygen concentration at the end of the event.</p>\n\n<p>As defined by FESHM 4240 6.1.A, Cases A, B, and C.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>V</strong> (ureg.Quantity, [length]^3):\nVolume of the confined space.</li>\n<li><strong>R</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric spill rate into confined space.</li>\n<li><strong>Q</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric ventilation rate of fan(s); positive value corresponds\nto blowing air into the confined space, negative - drawing contaminated\nair outside.</li>\n<li><strong>t</strong> (ureg.Quantity, [time]):\ntime, beginning of release is at <code>t</code> = 0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Oxygen concentration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">V</span>, </span><span class=\"param\"><span class=\"n\">R</span>, </span><span class=\"param\"><span class=\"n\">Q</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.conc_final", "modulename": "CryoToolBox.odh", "qualname": "conc_final", "kind": "function", "doc": "<p>Calculate the final oxygen concentration for continuous flow.</p>\n\n<p>Equivalent to conc_vent(V, R, Q, float('inf')).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>R</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric spill rate into confined space.</li>\n<li><strong>Q</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric ventilation rate of fan(s); positive value corresponds\nto blowing air into the confined space, negative - drawing contaminated\nair outside.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Oxygen concentration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">R</span>, </span><span class=\"param\"><span class=\"n\">Q</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.conc_after", "modulename": "CryoToolBox.odh", "qualname": "conc_after", "kind": "function", "doc": "<p>Calculate the oxygen concentration in the confined volume after\nthe release has ended.</p>\n\n<p>As defined by FESHM 4240 6.1.A, Case D.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>V</strong> (ureg.Quantity, [length]^3):\nVolume of the confined space.</li>\n<li><strong>C_e</strong> (float):\nOxygen concentration at the end of the release.</li>\n<li><strong>Q</strong> (ureg.Quantity, [length]^3/[time]):\nVolumetric ventilation rate of fan(s); positive value corresponds\nto blowing air into the confined space, negative - drawing contaminated\nair outside.</li>\n<li><strong>t</strong> (ureg.Quantity, [time]):\ntime, beginning of release is at <code>t</code>=0.</li>\n<li><strong>t_e</strong> (ureg.Quantity, [time]):\ntime when release ended.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Oxygen concentration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">V</span>, </span><span class=\"param\"><span class=\"n\">C_e</span>, </span><span class=\"param\"><span class=\"n\">Q</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">t_e</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.hole_leak", "modulename": "CryoToolBox.odh", "qualname": "hole_leak", "kind": "function", "doc": "<p>Calculate leak flow rate through a hole in a pipe.</p>\n\n<p>Discharge flow through a hole is calculated using direct integration\nmethod from API 520 Annex B.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>area</strong> (ureg.Quantity, [length]^2):\nArea of the leak.</li>\n<li><strong>fluid</strong> (heat_transfer.ThermState):\nThermodynamic state of the fluid stored in the source.</li>\n<li><strong>P_out</strong> (ureg.Quantity, [mass]/([length]*[time]^2)):\nPressure at the exit of the hole.</li>\n<li><strong>Kd</strong> (float, optional):\nDischarge coefficient.\nFor uneven holes 0.62 provides a good approximation.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity, [length]^3/[time]</strong>: Standard volumetric flow at Normal Temperature and Pressure.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">area</span>,</span><span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">P_out</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">Kd</span><span class=\"o\">=</span><span class=\"mf\">0.62</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.O2_sudden_release", "modulename": "CryoToolBox.odh", "qualname": "O2_sudden_release", "kind": "function", "doc": "<p>Calculate oxygen concentration after a sudden release.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>release</strong> (Quantity [length*3]):\nStandard volume of the inert gas released.</li>\n<li><strong>volume</strong> (Quantity [length^3]):\nVolume of the room, building, or area analyzed.</li>\n<li><strong>escape</strong> (bool, optional):\nIf True, mixed air is allowed to escape from considered volume.\nIf False, inert gas is trapped and expels the air outside the considered volume.\nDefault is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Resulting oxygen concentration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">release</span>, </span><span class=\"param\"><span class=\"n\">volume</span>, </span><span class=\"param\"><span class=\"n\">escape</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.odh.PFD_avg", "modulename": "CryoToolBox.odh", "qualname": "PFD_avg", "kind": "function", "doc": "<p>Calculate probability of failure on demand based on dangerous detected and dangerous undetected failure rates.</p>\n\n<p>The equation is taken from MSA Ultima X5000 safety manual.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>l_du</strong> (Quantity [1/time]):\nDangerous undetected failure rate.</li>\n<li><strong>l_dd</strong> (Quantity [1/time]):\nDangerous detected failure rate.</li>\n<li><strong>T_p</strong> (Quantity [time]):\nProof test interval.</li>\n<li><strong>MTTR</strong> (Quantity [time]):\nMean time to restoration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Probability of failure on demand.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l_du</span>, </span><span class=\"param\"><span class=\"n\">l_dd</span>, </span><span class=\"param\"><span class=\"n\">T_p</span>, </span><span class=\"param\"><span class=\"n\">MTTR</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping", "modulename": "CryoToolBox.piping", "kind": "module", "doc": "<p>Utilities for hydraulics calculations.</p>\n\n<p>Contains functions for hydrodynamic calculations. The main source of the\nequations is Crane TP-410.</p>\n"}, {"fullname": "CryoToolBox.piping.PipingError", "modulename": "CryoToolBox.piping", "qualname": "PipingError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.piping.PipingError.__init__", "modulename": "CryoToolBox.piping", "qualname": "PipingError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.PipingError.message", "modulename": "CryoToolBox.piping", "qualname": "PipingError.message", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.HydraulicError", "modulename": "CryoToolBox.piping", "qualname": "HydraulicError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "CryoToolBox.piping.HydraulicError.__init__", "modulename": "CryoToolBox.piping", "qualname": "HydraulicError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.HydraulicError.message", "modulename": "CryoToolBox.piping", "qualname": "HydraulicError.message", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.ChokedFlow", "modulename": "CryoToolBox.piping", "qualname": "ChokedFlow", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "HydraulicError"}, {"fullname": "CryoToolBox.piping.ChokedFlow.__init__", "modulename": "CryoToolBox.piping", "qualname": "ChokedFlow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.ChokedFlow.message", "modulename": "CryoToolBox.piping", "qualname": "ChokedFlow.message", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.NPS_table", "modulename": "CryoToolBox.piping", "qualname": "NPS_table", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0.125: {&#x27;OD&#x27;: &lt;Quantity(0.405, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.035, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.057, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.068, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.095, &#x27;inch&#x27;)&gt;}, 0.25: {&#x27;OD&#x27;: &lt;Quantity(0.54, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.073, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.088, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.119, &#x27;inch&#x27;)&gt;}, 0.375: {&#x27;OD&#x27;: &lt;Quantity(0.675, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.073, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.091, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.126, &#x27;inch&#x27;)&gt;}, 0.5: {&#x27;OD&#x27;: &lt;Quantity(0.84, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.095, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.147, &#x27;inch&#x27;)&gt;}, 0.75: {&#x27;OD&#x27;: &lt;Quantity(1.05, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.095, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.113, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.154, &#x27;inch&#x27;)&gt;}, 1: {&#x27;OD&#x27;: &lt;Quantity(1.315, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.114, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.133, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.179, &#x27;inch&#x27;)&gt;}, 1.125: {&#x27;OD&#x27;: &lt;Quantity(1.66, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.117, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.14, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.191, &#x27;inch&#x27;)&gt;}, 1.5: {&#x27;OD&#x27;: &lt;Quantity(1.9, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.125, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.145, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.2, &#x27;inch&#x27;)&gt;}, 2: {&#x27;OD&#x27;: &lt;Quantity(2.375, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.125, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.154, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.218, &#x27;inch&#x27;)&gt;}, 2.5: {&#x27;OD&#x27;: &lt;Quantity(2.875, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.12, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.203, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.276, &#x27;inch&#x27;)&gt;}, 3: {&#x27;OD&#x27;: &lt;Quantity(3.5, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.12, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.216, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.3, &#x27;inch&#x27;)&gt;}, 3.5: {&#x27;OD&#x27;: &lt;Quantity(4.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.12, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.226, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.318, &#x27;inch&#x27;)&gt;}, 4: {&#x27;OD&#x27;: &lt;Quantity(4.5, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.12, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.237, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.337, &#x27;inch&#x27;)&gt;}, 4.5: {&#x27;OD&#x27;: &lt;Quantity(5.0, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.247, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.355, &#x27;inch&#x27;)&gt;}, 5: {&#x27;OD&#x27;: &lt;Quantity(5.563, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.134, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.258, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;}, 6: {&#x27;OD&#x27;: &lt;Quantity(6.625, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.134, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.28, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.432, &#x27;inch&#x27;)&gt;}, 7: {&#x27;OD&#x27;: &lt;Quantity(7.625, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.301, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;}, 8: {&#x27;OD&#x27;: &lt;Quantity(8.625, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.148, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.322, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;}, 9: {&#x27;OD&#x27;: &lt;Quantity(9.625, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.342, &#x27;inch&#x27;)&gt;, 80: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;}, 10: {&#x27;DN&#x27;: &lt;Quantity(250, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(10.75, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.134, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.165, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.307, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.365, &#x27;inch&#x27;)&gt;}, 12: {&#x27;DN&#x27;: &lt;Quantity(300, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(12.75, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.156, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.18, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.33, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;}, 14: {&#x27;DN&#x27;: &lt;Quantity(350, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(14.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.156, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.312, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.438, &#x27;inch&#x27;)&gt;}, 16: {&#x27;DN&#x27;: &lt;Quantity(400, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(16.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.165, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.312, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;}, 18: {&#x27;DN&#x27;: &lt;Quantity(450, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(18.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.165, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.312, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.437, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.562, &#x27;inch&#x27;)&gt;}, 20: {&#x27;DN&#x27;: &lt;Quantity(500, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(20.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.594, &#x27;inch&#x27;)&gt;}, 22: {&#x27;DN&#x27;: &lt;Quantity(550, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(22.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.188, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;}, 24: {&#x27;DN&#x27;: &lt;Quantity(600, &#x27;inch&#x27;)&gt;, &#x27;OD&#x27;: &lt;Quantity(24.0, &#x27;inch&#x27;)&gt;, 5: &lt;Quantity(0.218, &#x27;inch&#x27;)&gt;, 10: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, 20: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, 30: &lt;Quantity(0.562, &#x27;inch&#x27;)&gt;, 40: &lt;Quantity(0.688, &#x27;inch&#x27;)&gt;}}"}, {"fullname": "CryoToolBox.piping.COPPER_TABLE", "modulename": "CryoToolBox.piping", "qualname": "COPPER_TABLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0.25: {&#x27;OD&#x27;: &lt;Quantity(0.375, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.035, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.03, &#x27;inch&#x27;)&gt;}, 0.375: {&#x27;OD&#x27;: &lt;Quantity(0.5, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.035, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.025, &#x27;inch&#x27;)&gt;}, 0.5: {&#x27;OD&#x27;: &lt;Quantity(0.625, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.04, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.028, &#x27;inch&#x27;)&gt;}, 0.625: {&#x27;OD&#x27;: &lt;Quantity(0.75, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.042, &#x27;inch&#x27;)&gt;}, 0.75: {&#x27;OD&#x27;: &lt;Quantity(0.875, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.045, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.032, &#x27;inch&#x27;)&gt;}, 1: {&#x27;OD&#x27;: &lt;Quantity(1.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.05, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.035, &#x27;inch&#x27;)&gt;}, 1.25: {&#x27;OD&#x27;: &lt;Quantity(1.375, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.055, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.042, &#x27;inch&#x27;)&gt;}, 1.5: {&#x27;OD&#x27;: &lt;Quantity(1.625, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.072, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.06, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.049, &#x27;inch&#x27;)&gt;}, 2: {&#x27;OD&#x27;: &lt;Quantity(2.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.07, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.058, &#x27;inch&#x27;)&gt;}, 2.5: {&#x27;OD&#x27;: &lt;Quantity(2.625, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.095, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.08, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.065, &#x27;inch&#x27;)&gt;}, 3: {&#x27;OD&#x27;: &lt;Quantity(3.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.09, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.072, &#x27;inch&#x27;)&gt;}, 3.5: {&#x27;OD&#x27;: &lt;Quantity(3.625, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.12, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.1, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.083, &#x27;inch&#x27;)&gt;}, 4: {&#x27;OD&#x27;: &lt;Quantity(4.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.134, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.11, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.095, &#x27;inch&#x27;)&gt;}, 5: {&#x27;OD&#x27;: &lt;Quantity(5.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.16, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.125, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.109, &#x27;inch&#x27;)&gt;}, 6: {&#x27;OD&#x27;: &lt;Quantity(6.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.192, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.14, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.122, &#x27;inch&#x27;)&gt;}, 8: {&#x27;OD&#x27;: &lt;Quantity(8.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.271, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.2, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.17, &#x27;inch&#x27;)&gt;}, 10: {&#x27;OD&#x27;: &lt;Quantity(10.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.338, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.25, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.212, &#x27;inch&#x27;)&gt;}, 12: {&#x27;OD&#x27;: &lt;Quantity(12.125, &#x27;inch&#x27;)&gt;, &#x27;K&#x27;: &lt;Quantity(0.405, &#x27;inch&#x27;)&gt;, &#x27;L&#x27;: &lt;Quantity(0.28, &#x27;inch&#x27;)&gt;, &#x27;M&#x27;: &lt;Quantity(0.254, &#x27;inch&#x27;)&gt;}}"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult", "kind": "class", "doc": "<p>ReinforcementAreaResult(A1, A2, A3, A4, d2, safe)</p>\n", "bases": "builtins.tuple"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.__init__", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.__init__", "kind": "function", "doc": "<p>Create new instance of ReinforcementAreaResult(A1, A2, A3, A4, d2, safe)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A1</span>, </span><span class=\"param\"><span class=\"n\">A2</span>, </span><span class=\"param\"><span class=\"n\">A3</span>, </span><span class=\"param\"><span class=\"n\">A4</span>, </span><span class=\"param\"><span class=\"n\">d2</span>, </span><span class=\"param\"><span class=\"n\">safe</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.A1", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.A1", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.A2", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.A2", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.A3", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.A3", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.A4", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.A4", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.d2", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.d2", "kind": "variable", "doc": "<p>Alias for field number 4</p>\n"}, {"fullname": "CryoToolBox.piping.ReinforcementAreaResult.safe", "modulename": "CryoToolBox.piping", "qualname": "ReinforcementAreaResult.safe", "kind": "variable", "doc": "<p>Alias for field number 5</p>\n"}, {"fullname": "CryoToolBox.piping.PipingElement", "modulename": "CryoToolBox.piping", "qualname": "PipingElement", "kind": "class", "doc": "<p>Generic piping element.</p>\n", "bases": "abc.ABC"}, {"fullname": "CryoToolBox.piping.PipingElement.area", "modulename": "CryoToolBox.piping", "qualname": "PipingElement.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PipingElement.K", "modulename": "CryoToolBox.piping", "qualname": "PipingElement.K", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Re</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Tube", "modulename": "CryoToolBox.piping", "qualname": "Tube", "kind": "class", "doc": "<p>Tube, requires OD and wall thickness specified</p>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Tube.__init__", "modulename": "CryoToolBox.piping", "qualname": "Tube.__init__", "kind": "function", "doc": "<p>Generate tube object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>T : ureg.Quantity {length</strong> (1}):\nMinimum wall thickness considering manufacturer's minus tolerance.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the tube.</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances. Default is 0 m.</li>\n<li><strong>eps : ureg.Quantity {length</strong> (1}):\nAbsolute roughness for the tube. Default value for smooth\npipe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">OD</span>,</span><span class=\"param\">\t<span class=\"n\">wall</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">wall_tol</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">eps</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0018</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Tube.OD", "modulename": "CryoToolBox.piping", "qualname": "Tube.OD", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.D", "modulename": "CryoToolBox.piping", "qualname": "Tube.D", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.wall", "modulename": "CryoToolBox.piping", "qualname": "Tube.wall", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.L", "modulename": "CryoToolBox.piping", "qualname": "Tube.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.eps", "modulename": "CryoToolBox.piping", "qualname": "Tube.eps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.wall_tol", "modulename": "CryoToolBox.piping", "qualname": "Tube.wall_tol", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.T", "modulename": "CryoToolBox.piping", "qualname": "Tube.T", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.c", "modulename": "CryoToolBox.piping", "qualname": "Tube.c", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.type", "modulename": "CryoToolBox.piping", "qualname": "Tube.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tube.ID", "modulename": "CryoToolBox.piping", "qualname": "Tube.ID", "kind": "variable", "doc": "<p>ureg.Quantity {length: 1} : Wall thickness of Pipe based on NPS table.</p>\n"}, {"fullname": "CryoToolBox.piping.Tube.area", "modulename": "CryoToolBox.piping", "qualname": "Tube.area", "kind": "variable", "doc": "<p>ureg.Quantity {length: 2} : Cross sectional area of pipe.</p>\n"}, {"fullname": "CryoToolBox.piping.Tube.volume", "modulename": "CryoToolBox.piping", "qualname": "Tube.volume", "kind": "variable", "doc": "<p>ureg.Quantity {length: 3} : Pipe inner volume.</p>\n"}, {"fullname": "CryoToolBox.piping.Tube.K", "modulename": "CryoToolBox.piping", "qualname": "Tube.K", "kind": "function", "doc": "<p>ureg.Quantity {length: 1}: Resistance coefficient.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Tube.f_T", "modulename": "CryoToolBox.piping", "qualname": "Tube.f_T", "kind": "function", "doc": "<p>Calculate Darcy friction factor for complete turbulence for smooth\npipe.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {dimensionless}</strong>: Fully turbulent Darcy friction factor.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Tube.pressure_design_thick", "modulename": "CryoToolBox.piping", "qualname": "Tube.pressure_design_thick", "kind": "function", "doc": "<p>Calculate pressure design thickness for given pressure and pipe\nmaterial based on B31.3 304.1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>P_int : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nInternal pressure, absolute</li>\n<li><strong>P_ext : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nExternal pressure, absolute</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (1}):\nMinimum required wall thickness.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">P_int</span>,</span><span class=\"param\">\t<span class=\"n\">P_ext</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">S</span>,</span><span class=\"param\">\t<span class=\"n\">E</span>,</span><span class=\"param\">\t<span class=\"n\">W</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Tube.pressure_rating", "modulename": "CryoToolBox.piping", "qualname": "Tube.pressure_rating", "kind": "function", "doc": "<p>Calculate internal pressure rating.</p>\n\n<p>Based on B31.3 304.1.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (1}):\nMinimum required wall thickness.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">S</span>, </span><span class=\"param\"><span class=\"n\">E</span>, </span><span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Pipe", "modulename": "CryoToolBox.piping", "qualname": "Pipe", "kind": "class", "doc": "<p>NPS pipe class.</p>\n\n<p>Pipe objects represent actual parts of the pipeline. The Pipe object\nwill contain information such as OD, ID, wall thickness, and can be\nused to calculate flow coefficient K that is used for flow calculations.</p>\n", "bases": "Tube"}, {"fullname": "CryoToolBox.piping.Pipe.__init__", "modulename": "CryoToolBox.piping", "qualname": "Pipe.__init__", "kind": "function", "doc": "<p>Generate <code>Pipe</code> object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D_nom : float or ureg.Quantity {length</strong> (1}):\nNominal diameter of piping; can be dimensionless or having a unit\nof length.</li>\n<li><strong>SCH</strong> (int):\nPipe schedule. Default value is SCH 40 (STD).</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nPipe length</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances.</li>\n<li><strong>eps : ureg.Quantity {length</strong> (1}):\nAbsolute roughness for the tube. Default value for smooth\npipe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">D_nom</span>,</span><span class=\"param\">\t<span class=\"n\">SCH</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;millimeter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">eps</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0018</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Pipe.SCH", "modulename": "CryoToolBox.piping", "qualname": "Pipe.SCH", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Pipe.D", "modulename": "CryoToolBox.piping", "qualname": "Pipe.D", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Pipe.type", "modulename": "CryoToolBox.piping", "qualname": "Pipe.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.CopperTube", "modulename": "CryoToolBox.piping", "qualname": "CopperTube", "kind": "class", "doc": "<p>Copper tube.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the tube.</li>\n<li><strong>eps : ureg.Quantity {length</strong> (1}):\nAbsolute roughness for the tube. Default value for smooth\npipe.</li>\n</ul>\n", "bases": "Tube"}, {"fullname": "CryoToolBox.piping.CopperTube.__init__", "modulename": "CryoToolBox.piping", "qualname": "CopperTube.__init__", "kind": "function", "doc": "<p>Generate tube object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>T : ureg.Quantity {length</strong> (1}):\nMinimum wall thickness considering manufacturer's minus tolerance.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the tube.</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances. Default is 0 m.</li>\n<li><strong>eps : ureg.Quantity {length</strong> (1}):\nAbsolute roughness for the tube. Default value for smooth\npipe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">D_nom</span>,</span><span class=\"param\">\t<span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"s1\">&#39;K&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">eps</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0018</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.CopperTube.D", "modulename": "CryoToolBox.piping", "qualname": "CopperTube.D", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.CopperTube.type", "modulename": "CryoToolBox.piping", "qualname": "CopperTube.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.VJPipe", "modulename": "CryoToolBox.piping", "qualname": "VJPipe", "kind": "class", "doc": "<p>Vacuum jacketed pipe.</p>\n", "bases": "Pipe"}, {"fullname": "CryoToolBox.piping.VJPipe.__init__", "modulename": "CryoToolBox.piping", "qualname": "VJPipe.__init__", "kind": "function", "doc": "<p>Generate Vacuum jacketed pipe object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D_nom : float or ureg.Quantity {length</strong> (1}):\nNominal diameter of the inner pipe.</li>\n<li><strong>SCH</strong> (int):\nInner pipe schedule. Default value is SCH 40 (STD).</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the inner pipe.</li>\n<li><strong>VJ_D : float or ureg.Quantity {length</strong> (1}):\nNominal diameter of the vacuum jacket.</li>\n<li><strong>VJ_SCH</strong> (int):\nVacuum jacket pipe schedule. Default value is SCH 40 (STD).</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances of the inner pipe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">D_nom</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">SCH</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">VJ_D</span>,</span><span class=\"param\">\t<span class=\"n\">VJ_SCH</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.VJPipe.VJ", "modulename": "CryoToolBox.piping", "qualname": "VJPipe.VJ", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.VJPipe.type", "modulename": "CryoToolBox.piping", "qualname": "VJPipe.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.VJPipe.info", "modulename": "CryoToolBox.piping", "qualname": "VJPipe.info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe", "kind": "class", "doc": "<p>Corrugated pipe class.</p>\n", "bases": "Tube"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.__init__", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.__init__", "kind": "function", "doc": "<p>Generate corrugated pipe object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D_nom : ureg.Quantity {length</strong> (1}):\nNominal diameter of the inner pipe.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the pipe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D_nom</span>, </span><span class=\"param\"><span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.f_mult", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.f_mult", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.type", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.K", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.K", "kind": "function", "doc": "<p>ureg.Quantity {length: 1}: Resistance coefficient.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.branch_reinforcement", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.branch_reinforcement", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.CorrugatedPipe.pressure_design_thick", "modulename": "CryoToolBox.piping", "qualname": "CorrugatedPipe.pressure_design_thick", "kind": "function", "doc": "<p>Calculate pressure design thickness for given pressure and pipe\nmaterial based on B31.3 304.1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>P_int : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nInternal pressure, absolute</li>\n<li><strong>P_ext : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nExternal pressure, absolute</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (1}):\nMinimum required wall thickness.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Entrance", "modulename": "CryoToolBox.piping", "qualname": "Entrance", "kind": "class", "doc": "<p>Pipe entrance, flush, sharp edged.</p>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Entrance.__init__", "modulename": "CryoToolBox.piping", "qualname": "Entrance.__init__", "kind": "function", "doc": "<p>Generate an pipe entrance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nInside diameter of the entrance.</li>\n<li><strong>K</strong> (float):\nResistance coefficient. 0.5 for sharp entrance.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID</span>, </span><span class=\"param\"><span class=\"n\">K</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Entrance.ID", "modulename": "CryoToolBox.piping", "qualname": "Entrance.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Entrance.L", "modulename": "CryoToolBox.piping", "qualname": "Entrance.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Entrance.type", "modulename": "CryoToolBox.piping", "qualname": "Entrance.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Entrance.volume", "modulename": "CryoToolBox.piping", "qualname": "Entrance.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Entrance.area", "modulename": "CryoToolBox.piping", "qualname": "Entrance.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Entrance.K", "modulename": "CryoToolBox.piping", "qualname": "Entrance.K", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Exit", "modulename": "CryoToolBox.piping", "qualname": "Exit", "kind": "class", "doc": "<p>Pipe exit, projecting or sharp-edged, or rounded.</p>\n", "bases": "Entrance"}, {"fullname": "CryoToolBox.piping.Exit.__init__", "modulename": "CryoToolBox.piping", "qualname": "Exit.__init__", "kind": "function", "doc": "<p>Generate pipe exit.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nInside diameter of the exit.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Exit.ID", "modulename": "CryoToolBox.piping", "qualname": "Exit.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Exit.L", "modulename": "CryoToolBox.piping", "qualname": "Exit.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Exit.type", "modulename": "CryoToolBox.piping", "qualname": "Exit.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Exit.volume", "modulename": "CryoToolBox.piping", "qualname": "Exit.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice", "modulename": "CryoToolBox.piping", "qualname": "Orifice", "kind": "class", "doc": "<p>Square-edged orifice plate</p>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Orifice.__init__", "modulename": "CryoToolBox.piping", "qualname": "Orifice.__init__", "kind": "function", "doc": "<p>Generate orifice.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nInside diameter of the orifice.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Orifice.Cd", "modulename": "CryoToolBox.piping", "qualname": "Orifice.Cd", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.ID", "modulename": "CryoToolBox.piping", "qualname": "Orifice.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.L", "modulename": "CryoToolBox.piping", "qualname": "Orifice.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.type", "modulename": "CryoToolBox.piping", "qualname": "Orifice.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.volume", "modulename": "CryoToolBox.piping", "qualname": "Orifice.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.area", "modulename": "CryoToolBox.piping", "qualname": "Orifice.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Orifice.K", "modulename": "CryoToolBox.piping", "qualname": "Orifice.K", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.ConicOrifice", "modulename": "CryoToolBox.piping", "qualname": "ConicOrifice", "kind": "class", "doc": "<p>Conic orifice</p>\n", "bases": "Orifice"}, {"fullname": "CryoToolBox.piping.ConicOrifice.__init__", "modulename": "CryoToolBox.piping", "qualname": "ConicOrifice.__init__", "kind": "function", "doc": "<p>Generate conic orifice.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D :</strong></li>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nInside diameter of the orifice.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D</span>, </span><span class=\"param\"><span class=\"n\">ID</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.ConicOrifice.type", "modulename": "CryoToolBox.piping", "qualname": "ConicOrifice.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus", "modulename": "CryoToolBox.piping", "qualname": "Annulus", "kind": "class", "doc": "<p>\"Annulus or tube in tube.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D1 : ureg.Quantity {length</strong> (1}):\nID of the outer tube.</li>\n<li><strong>D2 : ureg.Quantity {length</strong> (1}):\nOD of the inner tube.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nLength of the annulus tube.</li>\n</ul>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Annulus.__init__", "modulename": "CryoToolBox.piping", "qualname": "Annulus.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D1</span>, </span><span class=\"param\"><span class=\"n\">D2</span>, </span><span class=\"param\"><span class=\"n\">L</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meter&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>, </span><span class=\"param\"><span class=\"n\">eps</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">0.0018</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Annulus.D1", "modulename": "CryoToolBox.piping", "qualname": "Annulus.D1", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.D2", "modulename": "CryoToolBox.piping", "qualname": "Annulus.D2", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.L", "modulename": "CryoToolBox.piping", "qualname": "Annulus.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.volume", "modulename": "CryoToolBox.piping", "qualname": "Annulus.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.ID", "modulename": "CryoToolBox.piping", "qualname": "Annulus.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.eps", "modulename": "CryoToolBox.piping", "qualname": "Annulus.eps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.area", "modulename": "CryoToolBox.piping", "qualname": "Annulus.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Annulus.K", "modulename": "CryoToolBox.piping", "qualname": "Annulus.K", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Elbow", "modulename": "CryoToolBox.piping", "qualname": "Elbow", "kind": "class", "doc": "<p>NPS elbow fitting.\nMRO makes method K from PipeElbow class to override method from Pipe class.</p>\n", "bases": "Tube"}, {"fullname": "CryoToolBox.piping.Elbow.__init__", "modulename": "CryoToolBox.piping", "qualname": "Elbow.__init__", "kind": "function", "doc": "<p>Generate a tube elbow object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>R_D : ureg.Quantity {length</strong> (1}):\nElbow radius/diameter ratio</li>\n<li><strong>N</strong> (int):\nNumber of elbows in the pipeline</li>\n<li><strong>angle</strong> (ureg.Quantity {dimensionless}):\nNumber of elbows in the pipeline</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">OD</span>,</span><span class=\"param\">\t<span class=\"n\">wall</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">R_D</span><span class=\"o\">=</span><span class=\"mf\">1.5</span>,</span><span class=\"param\">\t<span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Elbow.R_D", "modulename": "CryoToolBox.piping", "qualname": "Elbow.R_D", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Elbow.N", "modulename": "CryoToolBox.piping", "qualname": "Elbow.N", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Elbow.angle", "modulename": "CryoToolBox.piping", "qualname": "Elbow.angle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Elbow.L", "modulename": "CryoToolBox.piping", "qualname": "Elbow.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Elbow.type", "modulename": "CryoToolBox.piping", "qualname": "Elbow.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Elbow.K", "modulename": "CryoToolBox.piping", "qualname": "Elbow.K", "kind": "function", "doc": "<p>Pressure drop in an elbow fitting.\nBased on Handbook of Hydraulic Resistance by I.E. Idelchik.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PipeElbow", "modulename": "CryoToolBox.piping", "qualname": "PipeElbow", "kind": "class", "doc": "<p>NPS Elbow fitting.\nMRO makes method K from Elbow class to override method from Pipe class.</p>\n", "bases": "Elbow, Pipe"}, {"fullname": "CryoToolBox.piping.PipeElbow.__init__", "modulename": "CryoToolBox.piping", "qualname": "PipeElbow.__init__", "kind": "function", "doc": "<p>Generate a pipe elbow object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>D_nom : float or ureg.Quantity {length</strong> (1}):\nNominal diameter of piping; can be dimensionless or having a unit\nof length.</li>\n<li><strong>SCH</strong> (int):\nPipe schedule. Default value is SCH 40 (STD).</li>\n<li><strong>R_D : ureg.Quantity {length</strong> (1}):\nElbow radius/diameter ratio</li>\n<li><strong>N</strong> (int):\nNumber of elbows in the pipeline</li>\n<li><strong>angle</strong> (ureg.Quantity {dimensionless}):\nNumber of elbows in the pipeline</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">D_nom</span>,</span><span class=\"param\">\t<span class=\"n\">SCH</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">R_D</span><span class=\"o\">=</span><span class=\"mf\">1.5</span>,</span><span class=\"param\">\t<span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.PipeElbow.type", "modulename": "CryoToolBox.piping", "qualname": "PipeElbow.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tee", "modulename": "CryoToolBox.piping", "qualname": "Tee", "kind": "class", "doc": "<p>Tee fitting.</p>\n", "bases": "Tube"}, {"fullname": "CryoToolBox.piping.Tee.__init__", "modulename": "CryoToolBox.piping", "qualname": "Tee.__init__", "kind": "function", "doc": "<p>Generate a tee.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances of the inner pipe.</li>\n<li><strong>N</strong> (int):\nNumber of tees in the pipeline</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">OD</span>,</span><span class=\"param\">\t<span class=\"n\">wall</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s1\">&#39;thru&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Tee.N", "modulename": "CryoToolBox.piping", "qualname": "Tee.N", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tee.type", "modulename": "CryoToolBox.piping", "qualname": "Tee.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Tee.K", "modulename": "CryoToolBox.piping", "qualname": "Tee.K", "kind": "function", "doc": "<p>ureg.Quantity {length: 1}: Resistance coefficient.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PipeTee", "modulename": "CryoToolBox.piping", "qualname": "PipeTee", "kind": "class", "doc": "<p>NPS Tee fitting.\nMRO makes method K from Tee class to override method from Pipe class.</p>\n", "bases": "Tee, Pipe"}, {"fullname": "CryoToolBox.piping.PipeTee.__init__", "modulename": "CryoToolBox.piping", "qualname": "PipeTee.__init__", "kind": "function", "doc": "<p>Generate a tee.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>OD : ureg.Quantity {length</strong> (1}):\nOuter diameter of the tube.</li>\n<li><strong>wall : ureg.Quantity {length</strong> (1}):\nWall thickness of the tube.</li>\n<li><strong>c : ureg.Quantity {length</strong> (1}):\nSum of the mechanical allowances plus corrosion and erosion\nallowances of the inner pipe.</li>\n<li><strong>N</strong> (int):\nNumber of tees in the pipeline</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D_nom</span>, </span><span class=\"param\"><span class=\"n\">SCH</span><span class=\"o\">=</span><span class=\"mi\">40</span>, </span><span class=\"param\"><span class=\"n\">c</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>, </span><span class=\"param\"><span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"s1\">&#39;thru&#39;</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.PipeTee.type", "modulename": "CryoToolBox.piping", "qualname": "PipeTee.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PipeTee.info", "modulename": "CryoToolBox.piping", "qualname": "PipeTee.info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Valve", "modulename": "CryoToolBox.piping", "qualname": "Valve", "kind": "class", "doc": "<p>Generic valve with known Cv.</p>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Valve.__init__", "modulename": "CryoToolBox.piping", "qualname": "Valve.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">D</span>, </span><span class=\"param\"><span class=\"n\">Cv</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Valve.D", "modulename": "CryoToolBox.piping", "qualname": "Valve.D", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.OD", "modulename": "CryoToolBox.piping", "qualname": "Valve.OD", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.ID", "modulename": "CryoToolBox.piping", "qualname": "Valve.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.L", "modulename": "CryoToolBox.piping", "qualname": "Valve.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.type", "modulename": "CryoToolBox.piping", "qualname": "Valve.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.volume", "modulename": "CryoToolBox.piping", "qualname": "Valve.volume", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.area", "modulename": "CryoToolBox.piping", "qualname": "Valve.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.Valve.K", "modulename": "CryoToolBox.piping", "qualname": "Valve.K", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PipingTransition", "modulename": "CryoToolBox.piping", "qualname": "PipingTransition", "kind": "class", "doc": "<p>Base class for pipe diameter transitions (contractions and enlargements).</p>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.Contraction", "modulename": "CryoToolBox.piping", "qualname": "Contraction", "kind": "class", "doc": "<p>Sudden and gradual pipe contraction fitting based on Crane TP-410.</p>\n\n<p>This class represents pipe contractions that reduce flow area from a larger\nupstream pipe to a smaller downstream pipe. The pressure loss coefficient\nis calculated based on the contraction angle and diameter ratio according\nto Crane TP-410 standards.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID1 : ureg.Quantity {length</strong> (1}):\nInside diameter of upstream (larger) pipe.</li>\n<li><strong>ID2 : ureg.Quantity {length</strong> (1}):\nInside diameter of downstream (smaller) pipe.</li>\n<li><strong>theta</strong> (ureg.Quantity {dimensionless}, optional):\nTotal contraction angle (included angle), by default 180\u00b0.\nValid range is 0\u00b0 &lt; theta \u2264 180\u00b0.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>beta</strong> (float):\nDiameter ratio (ID2/ID1), dimensionless.</li>\n<li><strong>theta</strong> (ureg.Quantity {dimensionless}):\nContraction angle.</li>\n<li><strong>type</strong> (str):\nElement type identifier.</li>\n<li><strong>ID1 : ureg.Quantity {length</strong> (1}):\nUpstream pipe inside diameter.</li>\n<li><strong>ID2 : ureg.Quantity {length</strong> (1}):\nDownstream pipe inside diameter.</li>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nMinimum (downstream) inside diameter.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nAxial length of contraction.</li>\n<li><strong>volume : ureg.Quantity {length</strong> (3}):\nInternal volume of the contraction.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The pressure loss coefficient K is calculated using different formulas\ndepending on the contraction angle:</p>\n\n<p>For \u03b8 \u2264 45\u00b0:\n$$K = 0.8 \\sin(\\theta/2) (1 - \\beta^2)$$</p>\n\n<p>For 45\u00b0 &lt; \u03b8 \u2264 180\u00b0:\n$$K = 0.5 (1 - \\beta^2) \\sqrt{\\sin(\\theta/2)}$$</p>\n\n<p>Where \u03b2 = ID2/ID1 is the diameter ratio.</p>\n\n<p>The axial length is calculated as:\n$$L = \\frac{|ID_1 - ID_2|}{2 \\tan(\\theta/2)}$$</p>\n\n<h6 id=\"references\">References</h6>\n\n<p>Crane Technical Paper No. 410 (TP-410), Flow of Fluids Through Valves,\nFittings, and Pipe, Section A-26.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">CryoToolBox</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">ctb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ureg</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Sudden contraction from 4&quot; to 2&quot; pipe</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contraction</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Contraction</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contraction</span><span class=\"o\">.</span><span class=\"n\">beta</span>\n<span class=\"go\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contraction</span><span class=\"o\">.</span><span class=\"n\">K</span><span class=\"p\">()</span>\n<span class=\"go\">0.375</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Gradual 30\u00b0 contraction</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradual</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Contraction</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gradual</span><span class=\"o\">.</span><span class=\"n\">K</span><span class=\"p\">()</span>\n<span class=\"go\">0.1552...</span>\n</code></pre>\n</div>\n", "bases": "PipingTransition"}, {"fullname": "CryoToolBox.piping.Contraction.__init__", "modulename": "CryoToolBox.piping", "qualname": "Contraction.__init__", "kind": "function", "doc": "<p>Initialize contraction fitting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID1 : ureg.Quantity {length</strong> (1}):\nInside diameter of upstream pipe.</li>\n<li><strong>ID2 : ureg.Quantity {length</strong> (1}):\nInside diameter of downstream pipe.</li>\n<li><strong>theta</strong> (ureg.Quantity {dimensionless}, optional):\nContraction angle, by default 180\u00b0.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If ID1 &lt;= ID2 (not a contraction).\nIf theta is outside valid range (0\u00b0, 180\u00b0].</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID1</span>, </span><span class=\"param\"><span class=\"n\">ID2</span>, </span><span class=\"param\"><span class=\"n\">theta</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Contraction.area", "modulename": "CryoToolBox.piping", "qualname": "Contraction.area", "kind": "variable", "doc": "<p>Cross-sectional area of the downstream (smaller) pipe.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (2}):\nFlow area based on downstream diameter.</li>\n</ul>\n"}, {"fullname": "CryoToolBox.piping.Contraction.K", "modulename": "CryoToolBox.piping", "qualname": "Contraction.K", "kind": "function", "doc": "<p>Calculate pressure loss coefficient for the contraction.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re</strong> (float, optional):\nReynolds number. Currently not implemented but reserved\nfor future Reynolds number corrections.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Dimensionless pressure loss coefficient based on downstream\nvelocity head.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The loss coefficient is calculated using Crane TP-410 formulas:</p>\n\n<ul>\n<li>For \u03b8 \u2264 45\u00b0: K = 0.8 sin(\u03b8/2) (1 - \u03b2\u00b2)</li>\n<li>For \u03b8 &gt; 45\u00b0: K = 0.5 (1 - \u03b2\u00b2) \u221asin(\u03b8/2)</li>\n</ul>\n\n<p>Where \u03b2 = ID2/ID1 is the diameter ratio.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If theta &gt; 180\u00b0 (invalid contraction angle).</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">CryoToolBox</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">ctb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ureg</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contraction</span> <span class=\"o\">=</span> <span class=\"n\">Contraction</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">deg</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">contraction</span><span class=\"o\">.</span><span class=\"n\">K</span><span class=\"p\">()</span>\n<span class=\"go\">0.3153...</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Enlargement", "modulename": "CryoToolBox.piping", "qualname": "Enlargement", "kind": "class", "doc": "<p>Sudden and gradual pipe enlargement fitting based on Crane TP-410.</p>\n\n<p>This class represents pipe enlargements that increase flow area from a smaller\nupstream pipe to a larger downstream pipe. The pressure loss coefficient\nis calculated based on the enlargement angle and diameter ratio.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID1 : ureg.Quantity {length</strong> (1}):\nInside diameter of upstream (smaller) pipe.</li>\n<li><strong>ID2 : ureg.Quantity {length</strong> (1}):\nInside diameter of downstream (larger) pipe.</li>\n<li><strong>theta</strong> (ureg.Quantity {dimensionless}, optional):\nTotal enlargement angle (included angle), by default 180\u00b0.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>For enlargements, the pressure loss coefficient is based on upstream\nvelocity head and uses different formulas than contractions.</p>\n", "bases": "PipingTransition"}, {"fullname": "CryoToolBox.piping.Enlargement.__init__", "modulename": "CryoToolBox.piping", "qualname": "Enlargement.__init__", "kind": "function", "doc": "<p>Initialize enlargement fitting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ID1 : ureg.Quantity {length</strong> (1}):\nInside diameter of upstream (smaller) pipe.</li>\n<li><strong>ID2 : ureg.Quantity {length</strong> (1}):\nInside diameter of downstream (larger) pipe.</li>\n<li><strong>theta</strong> (ureg.Quantity {dimensionless}, optional):\nEnlargement angle, by default 180\u00b0.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If ID1 &gt;= ID2 (not an enlargement).\nIf theta is outside valid range (0\u00b0, 180\u00b0].</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID1</span>, </span><span class=\"param\"><span class=\"n\">ID2</span>, </span><span class=\"param\"><span class=\"n\">theta</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.Enlargement.area", "modulename": "CryoToolBox.piping", "qualname": "Enlargement.area", "kind": "variable", "doc": "<p>Cross-sectional area of the upstream (smaller) pipe.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (2}):\nFlow area based on upstream diameter for enlargements.</li>\n</ul>\n"}, {"fullname": "CryoToolBox.piping.Enlargement.K", "modulename": "CryoToolBox.piping", "qualname": "Enlargement.K", "kind": "function", "doc": "<p>Calculate pressure loss coefficient for the enlargement.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re</strong> (float, optional):\nReynolds number. Currently not implemented.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Dimensionless pressure loss coefficient based on upstream\nvelocity head.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Enlargement formulas differ from contractions and are based on\nupstream velocity head.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PackedBed", "modulename": "CryoToolBox.piping", "qualname": "PackedBed", "kind": "class", "doc": "<p>Packed bed piping element.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>ID : ureg.Quantity {length</strong> (1}):\nInner diameter of the shell of the packed bed.</li>\n<li><strong>L : ureg.Quantity {length</strong> (1}):\nHeight of the packed bed.</li>\n<li><strong>D_part : ureg.Quantity {length</strong> (1}):\nSpherical equivalent particle diameter.</li>\n<li><strong>eps</strong> (float):\nVoid fraction (porosity) of the bed.</li>\n</ul>\n", "bases": "PipingElement"}, {"fullname": "CryoToolBox.piping.PackedBed.__init__", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ID</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">D_part</span>, </span><span class=\"param\"><span class=\"n\">eps</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.PackedBed.ID", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.ID", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.OD", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.OD", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.L", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.L", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.D_part", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.D_part", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.eps", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.eps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.type", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.area", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.PackedBed.f", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.f", "kind": "function", "doc": "<p>Calculate packed bed friction factor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PackedBed.Re_mod", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.Re_mod", "kind": "function", "doc": "<p>Calculate modified Reynolds number for the packed bed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re_s</strong> (Quantity {dimensionless} or float):\nSuperficial Re number; Re_s = U_s<em>ID</em>rho/mu,\nwhere U_s - superficial velocity and ID - shell ID.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.PackedBed.K", "modulename": "CryoToolBox.piping", "qualname": "PackedBed.K", "kind": "function", "doc": "<p>Calculate resistance coefficient for the packed bed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Re_s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.__init__", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.__init__", "kind": "function", "doc": "<p>Initiate Parallel Plate instance.\nParallel Plate relief valve designed by Fermilab</p>\n\n<p>Springs: dictionary containing 'N' - number of springs, 'k' - spring rate, and 'dx_precomp' - pre-compression length\nPlate: dictionary containing 'OD_plate' - OD of the plate, 'OD_O_ring' - OD of the O-Ring installed, and 'W_plate' - plate weight\nSupply_pipe: Pipe/Tube object of upstream pipe</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Springs</span>, </span><span class=\"param\"><span class=\"n\">Plate</span>, </span><span class=\"param\"><span class=\"n\">Supply_pipe</span></span>)</span>"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.Springs", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.Springs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.Plate", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.Plate", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.Supply_pipe", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.Supply_pipe", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.P_set", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.P_set", "kind": "function", "doc": "<p>\"\nCalculate set (lift) pressure of the Parallel Plate relief</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.ParallelPlateRelief.P_open", "modulename": "CryoToolBox.piping", "qualname": "ParallelPlateRelief.P_open", "kind": "function", "doc": "<p>Calculate pressure required to fully open Parallel Plate relief</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.f_Darcy", "modulename": "CryoToolBox.piping", "qualname": "f_Darcy", "kind": "function", "doc": "<p>Calculate Darcy friction factor using Serghide solution to\nColebrook equation.</p>\n\n<p>See Crane TP-410 2013, equation 6-6.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re_</strong> (float or Quantity {dimensionless}):\nReynolds number</li>\n<li><strong>eps_r</strong> (float or Quantity {dimensionless}):\nAbsolute roughness of the pipe</li>\n<li><strong>method</strong> (str):\nFriction factor formula name</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Darcy friction coefficient</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Re_</span>, </span><span class=\"param\"><span class=\"n\">eps_r</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;churchill&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.churchill", "modulename": "CryoToolBox.piping", "qualname": "churchill", "kind": "function", "doc": "<p>Calculate Darcy friction factor using modified Churchill formula.\nSee 8.5.2 of \"Pipe flow, A Practical and Comprehensive Guide\", Rennels,\nHobart, Hudson, 2012.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re_</strong> (float or Quantity {dimensionless}):\nReynolds number</li>\n<li><strong>eps_r</strong> (float or Quantity {dimensionless}):\nRelative roughness of the pipe</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Darcy friction coefficient</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Re_</span>, </span><span class=\"param\"><span class=\"n\">eps_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.serghide", "modulename": "CryoToolBox.piping", "qualname": "serghide", "kind": "function", "doc": "<p>Calculate Darcy friction factor using Serghide solution to\nColebrook equation.</p>\n\n<p>See Crane TP-410 2013, equation 6-6.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Re_</strong> (float or Quantity {dimensionless}):\nReynolds number</li>\n<li><strong>eps_r</strong> (float or Quantity {dimensionless}):\nRelative roughness of the pipe</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Darcy friction coefficient</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Re_</span>, </span><span class=\"param\"><span class=\"n\">eps_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.K_piping", "modulename": "CryoToolBox.piping", "qualname": "K_piping", "kind": "function", "doc": "<p>Calculate resistance coefficient converted to the area of the first element.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>piping</strong> (List[PipingElement]):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tuple</strong>: K0 : converted resistance coefficient of the piping\nA0 : area of the first element, basis for conversion</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">piping</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.rc", "modulename": "CryoToolBox.piping", "qualname": "rc", "kind": "function", "doc": "<p>Calculate critical pressure drop for the given fluid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.dP_Darcy", "modulename": "CryoToolBox.piping", "qualname": "dP_Darcy", "kind": "function", "doc": "<p>Calculate pressure drop using the Darcy-Weisbach equation.</p>\n\n<p>This function calculates the pressure drop across a pipe fitting or\nsection using the standard form of the Darcy-Weisbach equation with\na resistance coefficient K.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>K</strong> (float):\nDimensionless resistance coefficient (loss coefficient).\nTypical values:\n<ul>\n<li>Sharp-edged entrance: K \u2248 0.5</li>\n<li>Well-rounded entrance: K \u2248 0.04</li>\n<li>90\u00b0 elbow: K \u2248 0.9</li>\n<li>Gate valve (fully open): K \u2248 0.15</li>\n</ul></li>\n<li><strong>rho : ureg.Quantity {length: -3, mass</strong> (1}):\nFluid density at flow conditions.</li>\n<li><strong>w : ureg.Quantity {length: 1, time</strong> (-1}):\nFlow velocity (speed) at the reference location.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nPressure drop in psi. Positive value indicates pressure loss\nin the direction of flow.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The Darcy-Weisbach equation for pressure drop is:</p>\n\n<p>$$\\Delta P = K \\frac{\\rho w^2}{2}$$</p>\n\n<p>where:</p>\n\n<ul>\n<li>K is the dimensionless loss coefficient</li>\n<li>\u03c1 is the fluid density</li>\n<li>w is the flow velocity</li>\n</ul>\n\n<p>This equation assumes:</p>\n\n<ul>\n<li>Incompressible flow</li>\n<li>Steady-state conditions</li>\n<li>K value appropriate for the flow conditions (Reynolds number)</li>\n</ul>\n\n<p>The pressure drop represents the mechanical energy loss due to\nfriction, turbulence, and flow separation.</p>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li>Crane Technical Paper No. 410 (TP-410)</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">CryoToolBox</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">ctb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ureg</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Pressure drop across a 90\u00b0 elbow</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">K_elbow</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rho_water</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kg</span> <span class=\"o\">/</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"o\">**</span><span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">m</span> <span class=\"o\">/</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">s</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dP_Darcy</span><span class=\"p\">(</span><span class=\"n\">K_elbow</span><span class=\"p\">,</span> <span class=\"n\">rho_water</span><span class=\"p\">,</span> <span class=\"n\">velocity</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(6.25, &#39;millibar&#39;)&gt;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">K</span>, </span><span class=\"param\"><span class=\"n\">rho</span>, </span><span class=\"param\"><span class=\"n\">w</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.dP_incomp", "modulename": "CryoToolBox.piping", "qualname": "dP_incomp", "kind": "function", "doc": "<p>Calculate pressure drop of incompressible flow through piping.\nLumped method using Darcy equation is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">piping</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.m_dot_incomp", "modulename": "CryoToolBox.piping", "qualname": "m_dot_incomp", "kind": "function", "doc": "<p>Calculate mass flow through the piping using initial conditions\nat the beginning of piping.</p>\n\n<p>Calculation is based on Crane TP-410, p. 1.9.\nNet expansion factor Y is conservatively assumed as 1.\nMass flow is calculated using Darcy equation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>P_out : ureg.Quantity {length: -1, mass: 1, time</strong> (-1}):\nExit pressure of the piping.</li>\n<li><strong>guess : ureg.Quantity {mass: 1, time</strong> (-1}):\nguess value for the mass flow rate</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity : {mass: 1, time</strong> (-1}):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">piping</span>,</span><span class=\"param\">\t<span class=\"n\">P_out</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">guess</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gram / second&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.m_dot_isot", "modulename": "CryoToolBox.piping", "qualname": "m_dot_isot", "kind": "function", "doc": "<p>Calculate mass flow rate through piping for isothermal compressible\nflow.</p>\n\n<p>See 4.4 of \"Pipe flow, A Practical and Comprehensive Guide\", Rennels,\nHobart, Hudson, 2012.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fluid</strong> (ThermState):\nInlet fluid conditions</li>\n<li><p><strong>pipe</strong> (Pipe):</p></li>\n<li><p><strong>P_out : ureg.Quantity {length: -1, mass: 1, time</strong> (-1}):\nExit pressure of the piping.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {length: -1, mass: 1, time</strong> (-2}):\nPressure drop</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">pipe</span>,</span><span class=\"param\">\t<span class=\"n\">P_out</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">m_dot_g</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gram / second&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.dP_isot", "modulename": "CryoToolBox.piping", "qualname": "dP_isot", "kind": "function", "doc": "<p>Calculate pressure drop through piping for isothermal compressible\nflow.</p>\n\n<p>See 4.4 of \"Pipe flow, A Practical and Comprehensive Guide\", Rennels,\nHobart, Hudson, 2012.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>m_dot : Quantity {mass: 1, time</strong> (-1}):\nmass flow rate</li>\n<li><strong>fluid</strong> (ThermState):\nInlet fluid conditions</li>\n<li><p><strong>pipe</strong> (Pipe):</p></li>\n<li><p><strong>tol</strong> (float):\nAccuracy of the calculation.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {length: -1, mass: 1, time</strong> (-2}):\nPressure drop</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">pipe</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Mach", "modulename": "CryoToolBox.piping", "qualname": "Mach", "kind": "function", "doc": "<p>Calculate Mach number for given static conditions of the fluid.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>fluid : ThermState\n    Fluid state at static temperature and pressure\nv : Quantity, {length: 1, time: -1}</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Mach_total", "modulename": "CryoToolBox.piping", "qualname": "Mach_total", "kind": "function", "doc": "<p>Calculate Mach number for total temperature and pressure.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>fluid : ThermState\n    Fluid state at total temperature and pressure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">area</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.K_lim", "modulename": "CryoToolBox.piping", "qualname": "K_lim", "kind": "function", "doc": "<p>Calculate max resistance coefficient of a pipe.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">M</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.M_Klim", "modulename": "CryoToolBox.piping", "qualname": "M_Klim", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">K</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.M_complex", "modulename": "CryoToolBox.piping", "qualname": "M_complex", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">M</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.P_from_M", "modulename": "CryoToolBox.piping", "qualname": "P_from_M", "kind": "function", "doc": "<p>Calculate static pressure from inlet static pressure and Mach numbers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">P1</span>, </span><span class=\"param\"><span class=\"n\">M1</span>, </span><span class=\"param\"><span class=\"n\">M2</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.P_total", "modulename": "CryoToolBox.piping", "qualname": "P_total", "kind": "function", "doc": "<p>Calculate total pressure from static pressure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">P</span>, </span><span class=\"param\"><span class=\"n\">M</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.P_crit", "modulename": "CryoToolBox.piping", "qualname": "P_crit", "kind": "function", "doc": "<p>Calculate critical(sonic) pressure for the given static pressure and Ma.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">P</span>, </span><span class=\"param\"><span class=\"n\">M</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.dP_adiab", "modulename": "CryoToolBox.piping", "qualname": "dP_adiab", "kind": "function", "doc": "<p>Calculate pressure drop for isentropic flow given total inlet conditions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">pipe</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s1\">&#39;total&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.m_dot_adiab", "modulename": "CryoToolBox.piping", "qualname": "m_dot_adiab", "kind": "function", "doc": "<p>Calculate mass flow rate through piping for adiabatic compressible\nflow.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fluid</strong> (ThermState):\nInlet fluid conditions</li>\n<li><p><strong>pipe</strong> (Pipe):</p></li>\n<li><p><strong>P_out : Quantity {length: -1, mass: 1, time</strong> (-2}):\nOutlet pressure</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Quantity {mass: 1, time</strong> (-1}):\nmass flow rate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">pipe</span>,</span><span class=\"param\">\t<span class=\"n\">P_out</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s1\">&#39;total&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.K_to_Cv", "modulename": "CryoToolBox.piping", "qualname": "K_to_Cv", "kind": "function", "doc": "<p>Calculate flow coefficient Cv based on resistance coefficient value K.\nBased on definition:\nCv = Q<em>sqrt(rho/(d_P</em>rho_w))\nwhere Q - volumetric flow, rho - flow density\nrho_w - water density at 60 F\nd_P - pressure drop through the valve.\n[Cv] = gal/(min<em>(psi)</em>*0.5)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">K</span>, </span><span class=\"param\"><span class=\"n\">ID</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Cv_to_K", "modulename": "CryoToolBox.piping", "qualname": "Cv_to_K", "kind": "function", "doc": "<p>Calculate resistance coefficient K based on flow coefficient value Cv.\nBased on definition:\nCv = Q<em>sqrt(rho/(d_P</em>rho_w))\nwhere Q - volumetric flow, rho - flow density\nrho_w - water density at 60 F\nd_P - pressure drop through the valve.\n[Cv] = gal/(min<em>(psi)</em>*0.5)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Cv</span>, </span><span class=\"param\"><span class=\"n\">ID</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.beta", "modulename": "CryoToolBox.piping", "qualname": "beta", "kind": "function", "doc": "<p>Calculate beta = d/D for contraction or enlargement.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">d1</span>, </span><span class=\"param\"><span class=\"n\">d2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.equivalent_orifice", "modulename": "CryoToolBox.piping", "qualname": "equivalent_orifice", "kind": "function", "doc": "<p>Calculate ID for the equivalent square edge orifice (Cd = 0.61) for given\nflow and pressure drop.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">dP</span>, </span><span class=\"param\"><span class=\"n\">fluid</span><span class=\"o\">=&lt;</span><span class=\"n\">CryoToolBox</span><span class=\"o\">.</span><span class=\"n\">cp_wrapper</span><span class=\"o\">.</span><span class=\"n\">ThermState</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.velocity", "modulename": "CryoToolBox.piping", "qualname": "velocity", "kind": "function", "doc": "<p>Calculate velocity of fluid with given local parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">m_dot</span>, </span><span class=\"param\"><span class=\"n\">area</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.piping_stress", "modulename": "CryoToolBox.piping", "qualname": "piping_stress", "kind": "function", "doc": "<p>Calculate piping stress for given pressure and pipe material.</p>\n\n<p>Based on B31.3 304.1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>P_diff : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nDifferential internal pressure, absolute</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {mass: 1, length: -1, time</strong> (-2}):\nPiping stress</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tube</span>, </span><span class=\"param\"><span class=\"n\">P_diff</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">E</span>, </span><span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.pressure_design_thick", "modulename": "CryoToolBox.piping", "qualname": "pressure_design_thick", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tube</span>, </span><span class=\"param\"><span class=\"n\">P_diff</span>, </span><span class=\"param\"><span class=\"n\">I</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">S</span>, </span><span class=\"param\"><span class=\"n\">E</span>, </span><span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.pressure_req_thick", "modulename": "CryoToolBox.piping", "qualname": "pressure_req_thick", "kind": "function", "doc": "<p>Calculate minimum required thickness for given pressure and tube and material\nbased on B31.3 304.1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>tube</strong> (Tube):</p></li>\n<li><p><strong>P_diff : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nDifferential internal pressure.</p></li>\n<li><strong>I</strong> (float, optional):\nPipe bend coefficient per 304.2.1; for a straight pipe equals 1.</li>\n<li><strong>S : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nStress value for material from Table A-1A/A-1B.</li>\n<li><strong>E</strong> (float):\nQuality factor from Table A-1A/A-1B.</li>\n<li><strong>W</strong> (float):\nWeld joint strength reduction factor in accordance with 302.3.5(e).</li>\n<li><strong>Y</strong> (float):\nCoefficient from Table 304.1.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (1}):\nMinimum required wall thickness.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The formula for calculating the required thickness is:</p>\n\n<p>$$t_m = \\frac{P D}{2 (S E W/I + P Y)} + c$$</p>\n\n<p>where:</p>\n\n<ul>\n<li>( t ) is the minimum required wall thickness,</li>\n<li>( P ) is the differential internal pressure,</li>\n<li>( D ) is the outside diameter of the tube,</li>\n<li>( S ) is the allowable stress of the material,</li>\n<li>( E ) is the quality factor,</li>\n<li>( W ) is the weld joint strength reduction factor,</li>\n<li>( I ) is the pipe bend coefficient.</li>\n<li>( Y ) is the coefficient from Table 304.1.1.</li>\n</ul>\n\n<p>If the calculated thickness ( t ) is greater than or equal to ( D/6 ) or if ( P/(S E) ) is greater than 0.385, the design thickness must be calculated in accordance with B31.3 304.1.2 (b).</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">CryoToolBox</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">ctb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">ureg</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tube</span> <span class=\"o\">=</span> <span class=\"n\">ctb</span><span class=\"o\">.</span><span class=\"n\">piping</span><span class=\"o\">.</span><span class=\"n\">Tube</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mf\">0.065</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mf\">0.125</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">inch</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">P_diff</span> <span class=\"o\">=</span> <span class=\"mi\">200</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">psi</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">psi</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">E</span> <span class=\"o\">=</span> <span class=\"mf\">0.85</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pressure_req_thick</span><span class=\"p\">(</span><span class=\"n\">tube</span><span class=\"p\">,</span> <span class=\"n\">P_diff</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">E</span><span class=\"o\">=</span><span class=\"n\">E</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"o\">=</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"o\">=</span><span class=\"n\">Y</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Quantity(0.148419204, &#39;inch&#39;)&gt;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tube</span>, </span><span class=\"param\"><span class=\"n\">P_diff</span>, </span><span class=\"param\"><span class=\"n\">I</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">S</span>, </span><span class=\"param\"><span class=\"n\">E</span>, </span><span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.I_intrados", "modulename": "CryoToolBox.piping", "qualname": "I_intrados", "kind": "function", "doc": "<p>Calculate coefficient I at the intrados of a bend per B31.3 304.2.1 (3d).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>R1</strong> (float):\nbend radius of a pipe bend</li>\n<li><strong>D : ureg.Quantity {length</strong> (1}):\nOutside diameter of a pipe</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">R1</span>, </span><span class=\"param\"><span class=\"n\">D</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.I_extrados", "modulename": "CryoToolBox.piping", "qualname": "I_extrados", "kind": "function", "doc": "<p>Calculate coefficient I at the extrados of a bend per B31.3 304.2.1 (3e).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>R1</strong> (float):\nbend radius of a pipe bend</li>\n<li><strong>D : ureg.Quantity {length</strong> (1}):\nOutside diameter of a pipe</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">R1</span>, </span><span class=\"param\"><span class=\"n\">D</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.pressure_rating", "modulename": "CryoToolBox.piping", "qualname": "pressure_rating", "kind": "function", "doc": "<p>Calculate internal pressure rating.</p>\n\n<p>Based on B31.3 304.1.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ureg.Quantity {length</strong> (1}):\nMinimum required wall thickness.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tube</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">S</span>, </span><span class=\"param\"><span class=\"n\">E</span>, </span><span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.calculate_branch_reinforcement", "modulename": "CryoToolBox.piping", "qualname": "calculate_branch_reinforcement", "kind": "function", "doc": "<p>Calculate reinforcement and available area for given branch pipe and\nreinforcing ring thickness, Tr.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>header</strong> (Pipe):\nHeader pipe/tube</li>\n<li><strong>branch</strong> (Pipe):\nBranch pipe/tube</li>\n<li><strong>P_diff : ureg.Quantity {length: -1, mass: 1, time</strong> (-2}):\nDifferential internal pressure in pipe and branch</li>\n<li><strong>beta</strong> (ureg.Quantity {dimensionless}):\nSmaller angle between axes of branch and run</li>\n<li><strong>d1 : ureg.Quantity {length</strong> (1}):\nEffective length removed from pipe at branch (opening for branch)</li>\n<li><strong>Tr : ureg.Quantity {length</strong> (1}):\nMinimum thickness of reinforcing ring</li>\n<li><strong>Lr : ureg.Quantity {length</strong> (1}):\nLength of reinforcing ring along the run pipe.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">header</span>,</span><span class=\"param\">\t<span class=\"n\">branch</span>,</span><span class=\"param\">\t<span class=\"n\">P_diff</span>,</span><span class=\"param\">\t<span class=\"n\">beta</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">Tr</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">Lr</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">d1</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">S</span>,</span><span class=\"param\">\t<span class=\"n\">E</span>,</span><span class=\"param\">\t<span class=\"n\">W</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.calculate_closure_reinforcement", "modulename": "CryoToolBox.piping", "qualname": "calculate_closure_reinforcement", "kind": "function", "doc": "<p>Tp : ureg.Quantity {length: 1}\n    Plate thickness measured or minimum in accordance with purchase specification.\ntp : ureg.Quantity {length: 1}\n    Pressure design thickness of the plate.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">Tp</span>,</span><span class=\"param\">\t<span class=\"n\">tp</span>,</span><span class=\"param\">\t<span class=\"n\">c</span>,</span><span class=\"param\">\t<span class=\"n\">branch</span>,</span><span class=\"param\">\t<span class=\"n\">P_diff</span>,</span><span class=\"param\">\t<span class=\"n\">beta</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"s1\">&#39;degree&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">Tr</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">Lr</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">d1</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">S</span>,</span><span class=\"param\">\t<span class=\"n\">E</span>,</span><span class=\"param\">\t<span class=\"n\">W</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.G_nozzle", "modulename": "CryoToolBox.piping", "qualname": "G_nozzle", "kind": "function", "doc": "<p>Calculate mass flux through a converging nozzle using direct integration\nmethod.</p>\n\n<p>This method is recommended for relief valve sizing.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Returns</strong></li>\n<li><strong>-------</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fluid</span>,</span><span class=\"param\">\t<span class=\"n\">P_out</span><span class=\"o\">=&lt;</span><span class=\"n\">Quantity</span><span class=\"p\">(</span><span class=\"mf\">14.696</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pound_force_per_square_inch&#39;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">n_steps</span><span class=\"o\">=</span><span class=\"mi\">20</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.volume", "modulename": "CryoToolBox.piping", "qualname": "volume", "kind": "function", "doc": "<p>Calculate volume inside piping.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">piping</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.piping_stored_energy", "modulename": "CryoToolBox.piping", "qualname": "piping_stored_energy", "kind": "function", "doc": "<p>Calculate stored energy of the piping.</p>\n\n<p>Uses 8 diameters rule as per ASME PCC-2 2018 501-IV-3 (a).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fluid</span>, </span><span class=\"param\"><span class=\"n\">piping</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Cv_to_Kv", "modulename": "CryoToolBox.piping", "qualname": "Cv_to_Kv", "kind": "function", "doc": "<p>Convert Cv (flow coefficient in US units) to Kv (flow coefficient in metric units).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Cv</strong> (float):\nFlow coefficient expressed in US units gal/(min<em>psi</em>*0.5).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Flow coefficient expressed in metric units (m\u00b3/(h<em>bar</em>*0.5)).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Cv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.piping.Kv_to_Cv", "modulename": "CryoToolBox.piping", "qualname": "Kv_to_Cv", "kind": "function", "doc": "<p>Convert Kv (flow coefficient in metric units) to Cv (flow coefficient in US units).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Kv</strong> (float):\nFlow coefficient expressed in metric units (m\u00b3/(h<em>bar</em>*0.5)).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Flow coefficient expressed in US units (gal/(min<em>psi</em>*0.5)).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Kv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "CryoToolBox.std_conditions", "modulename": "CryoToolBox.std_conditions", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "CryoToolBox.std_conditions.ureg", "modulename": "CryoToolBox.std_conditions", "qualname": "ureg", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;pint.registry.UnitRegistry object&gt;"}, {"fullname": "CryoToolBox.std_conditions.Q_", "modulename": "CryoToolBox.std_conditions", "qualname": "Q_", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pint.Quantity&#x27;&gt;"}, {"fullname": "CryoToolBox.std_conditions.T_NTP", "modulename": "CryoToolBox.std_conditions", "qualname": "T_NTP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(68, &#x27;degree_Fahrenheit&#x27;)&gt;"}, {"fullname": "CryoToolBox.std_conditions.P_NTP", "modulename": "CryoToolBox.std_conditions", "qualname": "P_NTP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(14.696, &#x27;pound_force_per_square_inch&#x27;)&gt;"}, {"fullname": "CryoToolBox.std_conditions.T_MSC", "modulename": "CryoToolBox.std_conditions", "qualname": "T_MSC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(15, &#x27;degree_Celsius&#x27;)&gt;"}, {"fullname": "CryoToolBox.std_conditions.P_MSC", "modulename": "CryoToolBox.std_conditions", "qualname": "P_MSC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(101325, &#x27;pascal&#x27;)&gt;"}, {"fullname": "CryoToolBox.std_conditions.T_STD", "modulename": "CryoToolBox.std_conditions", "qualname": "T_STD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(60, &#x27;degree_Fahrenheit&#x27;)&gt;"}, {"fullname": "CryoToolBox.std_conditions.P_STD", "modulename": "CryoToolBox.std_conditions", "qualname": "P_STD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Quantity(14.7, &#x27;pound_force_per_square_inch&#x27;)&gt;"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();